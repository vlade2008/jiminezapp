{"version":3,"sources":["assets/print.png","modules/counter.js","modules/index.js","store.js","containers/newpatient/index.js","utils/RestClients.js","actions/patient.js","containers/patientlist/index.js","actions/order.js","containers/neworder/control.js","containers/neworder/CustomForm.js","containers/neworder/SachetsForm.js","actions/medicine.js","actions/template.js","containers/neworder/index.js","containers/patientview/index.js","containers/settings/MedicineForm.js","containers/settings/TemplateForm.js","containers/settings/index.js","containers/print/index.js","containers/app/index.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","count","isIncrementing","isDecrementing","combineReducers","counter","state","arguments","length","undefined","type","Object","objectSpread","history","createHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","apply","applyMiddleware","concat","createStore","connectRouter","rootReducer","FormItem","Form","Item","NewPatient","onSumbitVal","name","_this","props","activeRecord","_","isEmpty","Modal","error","title","content","onSubmit","_this2","this","_this$props","visible","onCloseModal","react_default","a","createElement","modal","id","onCancel","footer","es_button","key","onClick","es_form","layout","label","input","value","onChange","e","handleChange","target","address","weight","contact_number","pf","pf_philhealth","date_picker","format","birthdate","moment","date","dateString","React","Component","agent","tunnel","proxy","host","port","instance","axios","create","httpsAgent","timeout","headers","Content-Type","get","path","config","post","body","getSearchPatient","callback","then","response","catch","err","console","log","getSearchPatientPf","pf_has","pf_philhealth_has","getPatientView","getPatientList","upsertPatient","payload","fee","success","deletePatient","confirm","PatientList","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onClearFilter","setState","patientList","data","isPfPhilhealth","isPf","fetchPatientListPf","fetchPatientListPfPhilhealth","fetchPatientList","show","onSearchPatientList","searchPatient","onHandleShow","onPatientView","push","isPatientModal","onOpenModal","defineProperty","newUpdate","update","$merge","onSettings","onHandleEdit","onHasPf","isActive","clone","onHasPfPhilhealth","onHandleDelete","onOk","debounce","_this3","columns","dataIndex","render","text","record","style","backgroundColor","color","divider","fontWeight","map","item","i","card","extra","row","justify","col","span","width","marginBottom","placeholder","es_switch","marginLeft","checkedChildren","unCheckedChildren","checked","marginRight","table","dataSource","newpatient","assign","withRouter","upsertOrder","getOrderView","unit_measure","form_unitOptions","Select","Option","CustomForm","Input","TextArea","_this$props$activeRec","take","sig","selectmedicine","CustomForm_FormItem","help","onAddOrder","getMedicineList","upsertMedicine","deleteMedicine","getTemplateList","upsertTemplate","deleteTemplate","NewOrder","fetchMedicineList","medicineList","fetchTemplateList","templateList","onPredictiveMedication","findIndex","dataPred","handleChangeOrder","onTablet","tablet","ivfluid","onIVfluid","order","_this$state$activeRec","form_unit","dispense","brandname","strDispense","newOrder","mergeoOrder","printAndOrder","orderArray","JSON","stringify","dateOrder","onSumbitOrder","addTemplateOrder","templateData","addOrder","_this$state","newOrderArray","onRemove","cloneOrder","newArray","filter","o","_this$props$patientBa","patientBasicInfo","duration","diff","es_select","showSearch","neworder_Option","neworder_FormItem","neworder_CustomForm","neworder_TextArea","marginTop","rows","position","height","src","printImage","left","right","fontSize","textAlign","years","months","days","result","formatDuration","whiteSpace","icon","PatientView","isOrder","fetchPatientView","patient_id","match","params","onNewOrderView","patientId","res","onBackPatientList","onPrintView","orderId","pfPaid","pfPhilhealthPaid","fixed","parse","Orders","display","justifyContent","block","size","neworder","scroll","x","y","MedicineForm","MedicineForm_FormItem","MedicineForm_Option","TemplateForm","TemplateForm_FormItem","TemplateForm_TextArea","TabPane","Tabs","Settings","isSettingsModal","isTemplateModal","onPatientList","_this$setState2","me","assertThisInitialized","dataMedicine","columnsMedicine","tabs","defaultActiveKey","tab","settings_MedicineForm","settings_TemplateForm","ComponentToPrint","parseOrder","_this$props$patientIn","patientInfo","orderInfo","ComponentToPrintNoColor","_this$props$patientIn2","PrintView","fetchOrderView","order_id","onBack","goBack","react_to_print_lib_default","trigger","componentRef","componentRefnoColor","print_ComponentToPrint","ref","el","print_ComponentToPrintNoColor","App","padding","Switch","Route","exact","component","document","querySelector","es","store","lib","app"],"mappings":"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","file":"static/js/main.8cb188a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/print.01e0a9e7.png\";","export const INCREMENT_REQUESTED = 'counter/INCREMENT_REQUESTED'\nexport const INCREMENT = 'counter/INCREMENT'\nexport const DECREMENT_REQUESTED = 'counter/DECREMENT_REQUESTED'\nexport const DECREMENT = 'counter/DECREMENT'\n\nconst initialState = {\n  count: 0,\n  isIncrementing: false,\n  isDecrementing: false\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case INCREMENT_REQUESTED:\n      return {\n        ...state,\n        isIncrementing: true\n      }\n\n    case INCREMENT:\n      return {\n        ...state,\n        count: state.count + 1,\n        isIncrementing: !state.isIncrementing\n      }\n\n    case DECREMENT_REQUESTED:\n      return {\n        ...state,\n        isDecrementing: true\n      }\n\n    case DECREMENT:\n      return {\n        ...state,\n        count: state.count - 1,\n        isDecrementing: !state.isDecrementing\n      }\n\n    default:\n      return state\n  }\n}\n\nexport const increment = () => {\n  return dispatch => {\n    dispatch({\n      type: INCREMENT_REQUESTED\n    })\n\n    dispatch({\n      type: INCREMENT\n    })\n  }\n}\n\nexport const incrementAsync = () => {\n  return dispatch => {\n    dispatch({\n      type: INCREMENT_REQUESTED\n    })\n\n    return setTimeout(() => {\n      dispatch({\n        type: INCREMENT\n      })\n    }, 3000)\n  }\n}\n\nexport const decrement = () => {\n  return dispatch => {\n    dispatch({\n      type: DECREMENT_REQUESTED\n    })\n\n    dispatch({\n      type: DECREMENT\n    })\n  }\n}\n\nexport const decrementAsync = () => {\n  return dispatch => {\n    dispatch({\n      type: DECREMENT_REQUESTED\n    })\n\n    return setTimeout(() => {\n      dispatch({\n        type: DECREMENT\n      })\n    }, 3000)\n  }\n}\n","import { combineReducers } from 'redux'\nimport counter from './counter'\n\nexport default combineReducers({\n  counter\n})\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport thunk from 'redux-thunk'\nimport createHistory from 'history/createBrowserHistory'\nimport rootReducer from './modules'\n\nexport const history = createHistory()\n\nconst initialState = {}\nconst enhancers = []\nconst middleware = [thunk, routerMiddleware(history)]\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension())\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\nexport default createStore(\n  connectRouter(history)(rootReducer),\n  initialState,\n  composedEnhancers\n)\n","/*eslint-disable */\n\nimport React from 'react'\nimport { Modal, Button,Input, Form, DatePicker  } from 'antd';\nimport moment from 'moment';\nimport _ from 'lodash';\nconst FormItem = Form.Item;\n\nclass NewPatient extends React.Component {\n  onSumbitVal = () => {\n    const { name } = this.props.activeRecord;\n    if(!_.isEmpty(name)){\n      this.props.onSubmit();\n    }else {\n      Modal.error({\n       title: 'Please Fill up patient name',\n       content: 'Error',\n     });\n    }\n  }\n    render(){\n      const { visible, onCloseModal } = this.props;\n        return (\n          <Modal\n            title={this.props.activeRecord.id ? 'Edit Patient' : 'New Patient'}\n            visible={visible}\n            onCancel={onCloseModal}\n            footer={[\n            <Button key=\"back\" onClick={onCloseModal}>Return</Button>,\n            <Button key=\"submit\" type=\"primary\" onClick={this.onSumbitVal}>\n              Submit\n            </Button>,\n          ]}\n          >\n          <Form layout=\"horizontal\">\n            <FormItem label=\"Name\">\n              <Input value={this.props.activeRecord.name} onChange={((e)=>this.props.handleChange('name',e.target.value))}\n              />\n            </FormItem>\n            <FormItem label=\"Address\">\n              <Input value={this.props.activeRecord.address} onChange={((e)=>this.props.handleChange('address',e.target.value))}\n              />\n            </FormItem>\n              <FormItem label=\"Weight\">\n                <Input value={this.props.activeRecord.weight} onChange={((e) => this.props.handleChange('weight', e.target.value))}\n                />\n              </FormItem>\n            <FormItem label=\"Contact Number\">\n              <Input value={this.props.activeRecord.contact_number} onChange={((e)=>this.props.handleChange('contact_number',e.target.value))}\n              />\n            </FormItem>\n              <FormItem label=\"PF\">\n                <Input value={this.props.activeRecord.pf} onChange={((e) => this.props.handleChange('pf', e.target.value))}\n                />\n              </FormItem>\n              <FormItem label=\"PF Philhealth\">\n                <Input value={this.props.activeRecord.pf_philhealth} onChange={((e) => this.props.handleChange('pf_philhealth', e.target.value))}\n                />\n              </FormItem>\n            <FormItem label=\"Birthdate\">\n              <DatePicker\n              format=\"YYYY-MM-DD\"\n              value={ this.props.activeRecord.birthdate ? moment(this.props.activeRecord.birthdate) : moment()}\n              onChange={((date,dateString)=>this.props.handleChange('birthdate',date))}\n              />\n            </FormItem>\n          </Form>\n\n          </Modal>\n        );\n    }\n}\nexport default NewPatient;\n","/*eslint-disable */\n\nimport axios from 'axios'\nimport * as tunnel from 'tunnel';\nconst agent = tunnel.httpsOverHttp({\n    proxy: {\n        host: 'http://localhost',\n        port: 8080,\n    },\n});\n// export const baseURL = 'http://localhost:8080'\nexport const instance = () => {\n    let instance = axios.create({\n        // baseURL: baseURL,\n        httpsAgent: agent,\n        proxy: false,\n        timeout: 1000,\n        headers: {\n            'Content-Type': 'application/json;charset=UTF-8',\n        }\n    })\n    return instance\n}\n\nexport const get = (path, config) => {\n    return instance().get(path, config)\n}\n\nexport const post = (path, body, config) => {\n    return instance().post(path, body || {}, config)\n}\n\nexport const put = (path, body, config) => {\n    return instance().put(path, body || {}, config)\n}\n\nexport const destroy = (path, config) => {\n    return instance().delete(path, config)\n}\n","/*eslint-disable */\n\nimport {get, post, put, patch, _delete} from '../utils/RestClients'\nimport moment from 'moment'\nimport { Modal } from 'antd'\nimport _ from 'lodash'\n\nexport let getSearchPatient = (name,callback = null) => {\n    let payload = {\n      name: name\n    }\n    post('/patients/getSearch',payload).then(response => {\n      callback(response)\n    }).catch( function (err){\n      console.log('getPatientList',err);\n    })\n}\n\nexport let getSearchPatientPf = (pf_has, pf_philhealth_has, callback = null) => {\n  let payload = {\n     pf_has,\n     pf_philhealth_has\n  }\n  post('/patients/getSearchPf', payload).then(response => {\n    callback(response)\n  }).catch(function (err) {\n    console.log('getSearchPatientPf', err);\n  })\n}\n\nexport let getPatientView = (id,callback = null) => {\n    get(`/patients/${id}/getPatientView`).then(response => {\n      callback(response)\n    }).catch( function (err){\n      console.log('getPatientList',err);\n    })\n}\n\nexport let getPatientList = (callback = null) => {\n    get('/patients/get').then(response => {\n      callback(response)\n    }).catch( function (err){\n      console.log('getPatientList',err);\n    })\n}\n\nexport let upsertPatient = ( payload, callback = null) =>{\n  if (payload.id){\n    payload.fee = !_.isEmpty(payload.pf) || !_.isEmpty(payload.pf_philhealth) ? true : false\n    post('/patients/update',payload).then(response => {\n      Modal.success({\n       title: 'Patient Update',\n       content: 'Success',\n     });\n      callback(response)\n    }).catch( function (err){\n      Modal.error({\n       title: 'Patient Error',\n       content: 'Error',\n     });\n      console.log('updatePatient',err);\n    })\n  }else{\n    payload.pf_has = false\n    payload.pf_philhealth_has = false\n    payload.birthdate = payload.birthdate ? payload.birthdate : moment()\n    payload.fee = !_.isEmpty(payload.pf) || !_.isEmpty(payload.pf_philhealth) ? true : false\n    post('/patients/create',payload).then(response => {\n      Modal.success({\n       title: 'Patient Create',\n       content: 'Success',\n     });\n      callback(response)\n    }).catch( function (err){\n      Modal.error({\n       title: 'Patient Error',\n       content: 'Error',\n     });\n      console.log('createPatient',err);\n    })\n  }\n}\n\nexport let deletePatient = ( id,callback = null) => {\n    get(`/patients/${id}/destroy`).then(response => {\n      Modal.success({\n       title: 'Patient Delete',\n       content: 'Success',\n     });\n      callback(response)\n    }).catch( function (err){\n      console.log('getPatientList',err);\n    })\n}\n","/*eslint-disable */\n\nimport React from 'react'\nimport { Table, Divider, Tag, Card, Input, Button, Modal, Switch, Row, Col } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport moment from 'moment';\nimport update from 'react-addons-update';\nimport _ from 'lodash';\n\nimport NewPatient from '../newpatient';\n\nimport { getPatientList, upsertPatient, deletePatient, getSearchPatient, getSearchPatientPf } from '../../actions/patient';\nconst confirm = Modal.confirm;\n\nclass PatientList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isPatientModal: false,\n      patientList: [],\n      activeRecord: {},\n      searchPatient: '',\n      isPf: false,\n      isPfPhilhealth: false,\n      show: false,\n    }\n\n    this.onSearchPatientList = _.debounce(this.onSearchPatientList, 100)\n\n  }\n  componentWillMount() {\n    this.fetchPatientList();\n  }\n\n  onClearFilter = () => {\n    let pf_has = false\n    let pf_philhealth_has = false\n    getSearchPatientPf(pf_has, pf_philhealth_has, (response) => {\n      this.setState({\n        patientList: response.data,\n        isPfPhilhealth: false,\n        isPf: false\n      })\n    })\n  }\n\n  fetchPatientListPf = (isPf) => {\n    let pf_has = isPf\n    let pf_philhealth_has = this.state.isPfPhilhealth\n    getSearchPatientPf(pf_has, pf_philhealth_has, (response) => {\n      this.setState({\n        patientList: response.data,\n        isPf\n      })\n    })\n  }\n\n  fetchPatientListPfPhilhealth = (isPfPhilhealth) => {\n    let pf_has = this.state.isPf\n    let pf_philhealth_has = isPfPhilhealth\n    getSearchPatientPf(pf_has, pf_philhealth_has, (response) => {\n      this.setState({\n        patientList: response.data,\n        isPfPhilhealth\n      })\n    })\n\n  }\n\n  fetchPatientList = () => {\n    getPatientList((response) => {\n      this.setState({\n        patientList: response.data || [],\n        activeRecord: {},\n        isPf: false,\n        isPfPhilhealth: false,\n        show:false,\n      })\n    })\n  }\n\n  \n\n  onSearchPatientList = (value) => {\n    this.setState({\n      searchPatient: value,\n    }, () => {\n      getSearchPatient(value, (response) => {\n        this.setState({\n          patientList: response.data,\n        })\n      })\n    })\n  }\n\n  onHandleShow = (show) =>{\n    if(show){\n      let pf_has = this.state.isPf\n      let pf_philhealth_has = this.state.isPfPhilhealth\n      getSearchPatientPf(pf_has, pf_philhealth_has, (response) => {\n        this.setState({\n          patientList: response.data,\n          show\n        })\n      })\n    }else{\n      this.fetchPatientList()\n    }\n    \n  }\n\n  onPatientView = (data) => {\n    return () => {\n      this.props.history.push(`/patient/${data.id}`);\n    }\n  }\n\n  onCloseModal = () => {\n    this.setState({\n      isPatientModal: false,\n    })\n  }\n\n  onOpenModal = () => {\n    this.setState({\n      isPatientModal: true,\n      activeRecord: {}\n    })\n  }\n\n  handleChange = (name, value) => {\n    const payload = {\n      [name]: value\n    }\n    let newUpdate = update(this.state.activeRecord, {\n      $merge: payload\n    })\n    this.setState({\n      activeRecord: newUpdate\n    })\n  }\n\n  onSettings = () => {\n    this.props.history.push('/settings')\n  }\n\n  onHandleEdit = (data) => {\n    return () => {\n      this.setState({\n        activeRecord: {\n          ...data,\n        },\n        isPatientModal: true,\n      })\n    }\n  }\n\n  onHasPf = (data, isActive) => {\n    return () =>{\n      let payload = _.clone(data)\n      payload.pf_has = isActive\n      upsertPatient(payload, (response) => {\n        this.fetchPatientList()\n      })\n    }\n  }\n\n  onHasPfPhilhealth = (data, isActive) => {\n    return () =>{\n      let payload = _.clone(data)\n      payload.pf_philhealth_has = isActive\n      upsertPatient(payload, (response) => {\n        this.fetchPatientList()\n      })\n    }\n  }\n\n  onHandleDelete = (data) => {\n    return () => {\n      confirm({\n        title: 'Do you Want to delete these patient?',\n        content: data.name,\n        onOk() {\n          deletePatient(data.id, () => {\n            this.fetchPatientList()\n          })\n        },\n        onCancel() {\n          console.log('Cancel');\n        },\n      });\n    }\n  }\n\n  onSubmit = () => {\n    const payload = this.state.activeRecord;\n    upsertPatient(payload, (response) => {\n      this.fetchPatientList()\n      this.onCloseModal();\n    })\n  }\n\n  render() {\n    const columns = [{\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n    }, {\n      title: 'Address',\n      dataIndex: 'address',\n      key: 'address',\n    },\n    {\n      title: 'Birthdate (YYYY-MM-DD)',\n      key: 'birthdate',\n      render: (text, record) => {\n        return (\n          <span>\n            {moment(record.birthdate).format('YYYY-MM-DD')}\n          </span>\n        )\n      }\n    },\n    {\n      title: 'Contact Number',\n      key: 'contact_number',\n      dataIndex: 'contact_number',\n    },\n    {\n      title: 'Professional fees',\n      key: 'pf',\n      render: (text, record) => (\n        <span>\n          {\n            !_.isEmpty(record.pf) ?\n              record.pf_has ? <Button onClick={this.onHasPf(record, false)} style={{ backgroundColor: '#87d068', color: 'white' }}> PAID</Button> : <Button onClick={this.onHasPf(record, true)} style={{ backgroundColor: '#f50', color: 'white' }} > NOT PAID</Button> : null\n          }\n          <Divider type=\"vertical\" />\n          {record.pf ? <span style={{fontWeight: 'bold'}}>₱{record.pf}</span> : '₱0'}\n          \n          \n        </span>\n      ),\n    },\n    {\n      title: 'Professional fees PhilHealth',\n      key: 'pf_health',\n      render: (text, record) => (\n        <span>\n          <span>\n            {\n              !_.isEmpty(record.pf_philhealth) ?\n                record.pf_philhealth_has ? <Button onClick={this.onHasPfPhilhealth(record, false)} style={{ backgroundColor: '#87d068', color: 'white' }}> PAID</Button> : <Button onClick={this.onHasPfPhilhealth(record, true)} style={{ backgroundColor: '#f50', color: 'white' }} > NOT PAID</Button> : null\n            }\n            <Divider type=\"vertical\" />\n            {record.pf_philhealth ? <span style={{ fontWeight: 'bold' }}>₱{record.pf_philhealth}</span> : '₱0'}\n          </span>\n        </span>\n      ),\n    },\n    {\n      title: 'Action',\n      key: 'action',\n      render: (text, record) => (\n        <span>\n          <a onClick={this.onHandleEdit(record)}>Edit</a>\n          <Divider type=\"vertical\" />\n          <a onClick={this.onHandleDelete(record)}>Delete</a>\n          <Divider type=\"vertical\" />\n          <a onClick={this.onPatientView(record)}>View</a>\n        </span>\n      ),\n    }\n    ];\n\n    let data = this.state.patientList.map((item, i) => {\n      item.key = i\n      return item;\n    })\n\n    return (\n      <Card title={\n        <h1>Patient List</h1>\n      }\n        extra={\n          <Button onClick={this.onSettings}>Settings</Button>\n        }\n      >\n        <Row type=\"flex\" justify=\"start\">\n          <Col span={7}>\n            <Input\n              style={{ width: 300, marginBottom: 20 }}\n              placeholder=\"Seach Name Patient\"\n              value={this.state.searchPatient}\n              onChange={(e) => { this.onSearchPatientList(e.target.value) }}\n\n            />\n            <Button onClick={this.onOpenModal} type='primary'>New Patient</Button></Col>\n\n          \n\n          <Col span={10}>\n            <span style={{ fontWeight: 'bold' }}>\n              Show Not Paid\n            <Switch style={{marginLeft: 10}} checkedChildren=\"SHOW\" unCheckedChildren=\"NOT SHOW\" checked={this.state.show} onChange={(checked) => this.onHandleShow(checked)} />\n            </span>\n            {\n              this.state.show ? (\n                <Card>\n                  <span style={{ fontWeight: 'bold' }}>\n                    PF\n            <Switch style={{ marginLeft: 10 }} checkedChildren=\"PAID\" unCheckedChildren=\"NOT PAID\" checked={this.state.isPf} onChange={(checked) => this.fetchPatientListPf(checked)} />\n                  </span>\n                  <span style={{ marginLeft: 20, marginRight: 20, fontWeight: 'bold' }}>\n                    PF PHILHEALTH\n            <Switch style={{ marginLeft: 10 }} checkedChildren=\"PAID\" unCheckedChildren=\"NOT PAID\" checked={this.state.isPfPhilhealth} onChange={(checked) => this.fetchPatientListPfPhilhealth(checked)} />\n                  </span>\n                  <Button onClick={this.onClearFilter}>Clear Filter</Button>\n                </Card>\n              ) : null\n            }\n            \n          </Col>\n\n\n\n        </Row>\n        <Table columns={columns} dataSource={data} />\n\n        {\n          this.state.isPatientModal ? (\n            <NewPatient\n              handleChange={this.handleChange}\n              visible={this.state.isPatientModal}\n              onCloseModal={this.onCloseModal}\n              onSubmit={this.onSubmit}\n              {...this.state}\n            />\n          ) : null\n        }\n\n      </Card>\n    );\n  }\n}\nexport default withRouter(PatientList);\n","/*eslint-disable */\n\nimport {get, post, put, patch, _delete} from '../utils/RestClients'\nimport { Modal } from 'antd';\n\n\n\n// export let getMedicineList = (callback = null) => {\n//     get('/orders/get').then(response => {\n//       callback(response)\n//     }).catch( function (err){\n//       console.log('getMedicineList',err);\n//     })\n// }\n\nexport let upsertOrder = ( payload, callback = null) =>{\n  if (payload.id){\n    // post('/medicines/update',payload).then(response => {\n    //   Modal.success({\n    //    title: 'Medicine Update',\n    //    content: 'Success',\n    //  });\n    //   callback(response)\n    // }).catch( function (err){\n    //   Modal.error({\n    //    title: 'Medicine Error',\n    //    content: 'Error',\n    //  });\n    //   console.log('updateMedicine',err);\n    // })\n  }else{\n    post('/orders/create',payload).then(response => {\n      Modal.success({\n       title: 'Order Create',\n       content: 'Success',\n     });\n      callback(response)\n    }).catch( function (err){\n      Modal.error({\n       title: 'Order Error',\n       content: 'Error',\n     });\n      console.log('createOrder',err);\n    })\n  }\n}\n\nexport let getOrderView = (id,callback = null) => {\n    get(`/orders/${id}/getOrder`).then(response => {\n      callback(response)\n    }).catch( function (err){\n      console.log('getOrderView',err);\n    })\n}\n","const predictive_medication = [\n  {\n    selectmedicine: 'Amoxicillin 100mg /1 ml',\n    dispense: 1,\n    form_unit: 'Bottle',\n    sig: 'ml 3x a day x 7 days (6am-1pm-8pm)'\n  },\n  {\n    selectmedicine: 'Amoxicillin 250mg/5 ml',\n    form_unit: 'Bottle',\n    dispense: 1,\n    sig: 'ml 3x a day x 7 days (6am-1pm-8pm)'\n  },\n  {\n    selectmedicine: 'Co-Amoxiclav 457mg/5 ml',\n    form_unit: 'Bottle',\n    dispense: 1,\n    sig: 'ml 2x a day x 7 days (7am-7pm)'\n  },\n  {\n    selectmedicine: 'Cefixime 20mg/1 ml',\n    form_unit: 'Bottle',\n    dispense: 1,\n    sig: 'ml 2x a day x 7 days  (7am-7pm)'\n  },\n  {\n    selectmedicine: 'Cefixime 100mg/5ml',\n    form_unit: 'Bottle',\n    dispense: 1,\n    sig: 'ml 2x a day x 7 days  (7am-7pm)'\n  },\n  {\n    selectmedicine: 'Cefuroxime 250mg/5ml',\n    form_unit: 'Bottle',\n    dispense: 1,\n    sig: 'ml 2x a day x 7 days  (7am-7pm)'\n  },\n  {\n    selectmedicine: 'Cefuroxime 500mg',\n    form_unit: 'Caps',\n    dispense: 1,\n    take: '1',\n    sig: 'cap 2x a day x 7 days  (7am-7pm)'\n  },\n  {\n    selectmedicine: 'Sultamicillin tosylate 750mg/tab',\n    brandname: 'Silgram',\n    form_unit: 'Tablet',\n    dispense: 14,\n    take: '1',\n    sig: '1 tab 2x a day x 7 days   (7am-7pm'\n  },\n  {\n    selectmedicine: 'Clarithromycin 250mg/5ml',\n    form_unit: 'Bottle',\n    dispense: 1,\n    sig: 'ml 2x a day x 7 days  (7am-7pm)'\n  },\n  {\n    selectmedicine: 'Azithromycin 200mg/5ml',\n    form_unit: 'Bottle',\n    dispense: 1,\n    sig: 'ml 1x a day  x 7 days  (8 pm)'\n  },\n  {\n    selectmedicine: 'Salbutamol 2mg/5 ml',\n    form_unit: 'Bottle',\n    dispense: 1,\n    sig: 'ml 3x a day x 5 days (6am-1pm-8pm)'\n  },\n  {\n    selectmedicine: 'Salbutamol 2mg/tab',\n    form_unit: 'Tablet',\n    dispense: 15,\n    take: 1,\n    sig: 'tab 3x a day x 5 days  (6am-1pm-8pm)'\n  },\n  {\n    selectmedicine: 'Procaterol 25 ug/5 ml',\n    form_unit: 'Bottle',\n    dispense: 1,\n    sig: 'ml 2x a day x 7 days   (7am-7pm)'\n  },\n  {\n    selectmedicine: 'Procaterol 25 ug/5 ml',\n    form_unit: 'Bottle',\n    dispense: 1,\n    sig: 'ml 2x a day x 7 days   (7am-7pm)'\n  },\n  {\n    selectmedicine: 'Procaterol 25ug/tab',\n    form_unit: 'Tablet',\n    take: 1,\n    dispense: 14,\n    sig: 'tab 2x a day x 7 days   (7am-7pm)'\n  },\n  {\n    selectmedicine: 'Procaterol 50ug/tab',\n    form_unit: 'Tablet',\n    take: 1,\n    dispense: 14,\n    sig: 'tab 2x a day x 7 days   (7am-7pm)'\n  },\n  {\n    selectmedicine: 'N-Acetylcisteine 100mg/5 ml',\n    form_unit: 'Bottle',\n    dispense: 1,\n    sig: 'ml 2x a day x 5 days   (7am-7pm)'\n  },\n  {\n    selectmedicine: 'N-Acetylcysteine 200mg/sachet',\n    form_unit: 'Satchets',\n    dispense: 14,\n    take:1,\n    sig: 'sachet plus 10 ml water x 5 days   (7am-7pm)'\n  },\n  {\n    selectmedicine: 'N-Acetylcysteine 600mg/tab',\n    form_unit: 'Tablet',\n    dispense: 5,\n    take:1,\n    sig: 'tab plus 1 oz water 1x a day x 5 days  (8pm)'\n  },\n  {\n    selectmedicine: 'Multivitamins plus buclizine syrup',\n    brandname:'Biotermin',\n    form_unit: 'Bottle',\n    dispense: 1,\n    sig: 'ml once a day x 2 mos   (8pm)'\n  },\n  {\n    selectmedicine: 'Multivitamins Drops',\n    form_unit: 'Bottle',\n    dispense: 1,\n    sig: 'ml once a day   (8pm)'\n  },\n  {\n    selectmedicine: 'Multivitamins Syrup',\n    form_unit: 'Bottle',\n    dispense: 1,\n    sig: 'ml 1x a day  (8pm)'\n  },\n  {\n    selectmedicine: 'Montelukast 4 mg',\n    form_unit: 'Tablet',\n    take: 1,\n    sig: 'tab 1x a day   (8pm)'\n  },\n  {\n    selectmedicine: 'Montelukast 5 mg',\n    form_unit: 'Tablet',\n    take: 1,\n    sig: 'tab 1x a day   (8pm)'\n  },\n  {\n    selectmedicine: 'Montelukast 10 mg',\n    form_unit: 'Tablet',\n    unitofmeasure: 'tab',\n    take: 1,\n    sig: 'tab 1x a day   (8pm)'\n  },\n  {\n    selectmedicine: 'Vit. C syrup',\n    form_unit: 'Bottle',\n    sig: 'ml once a day   (8pm)'\n  },\n  {\n    selectmedicine: 'Vit, C Drops',\n    form_unit: 'Bottle',\n    dispense: 1,\n    sig: 'ml once a day (8pm)'\n  },\n  {\n    selectmedicine: 'FeSO4 Drops',\n    form_unit: 'Bottle',\n    dispense: 1,\n    sig: 'ml once a day   (8 pm)'\n  },\n  {\n    selectmedicine: 'Cetirizine 2.75mg/ml',\n    form_unit: 'Bottle',\n    dispense: 1,\n    sig: 'ml ____ (1x or 2x  a day) x 1 week (8pm or 7am -7pm)'\n  },\n  {\n    selectmedicine: 'Cetirizine 5mg/5 ml',\n    form_unit: 'Bottle',\n    dispense: 1,\n    sig: 'ml ____ (1x or 2x  a day) x 1 week (8pm or 7am -7pm)'\n  },\n  {\n    selectmedicine: 'Paracetamol 100 mg/ml',\n    form_unit: 'Bottle',\n    dispense: 1,\n    sig: 'ml every 4 hours if temp ≥ 38'\n  },\n  {\n    selectmedicine: 'Paracetamol 120 mg/5 ml',\n    form_unit: 'Bottle',\n    dispense: 1,\n    sig: 'ml every 4 hours if temp ≥ 38'\n  },\n  {\n    selectmedicine: 'Paracetamol 250 mg/5 ml',\n    form_unit: 'Bottle',\n    dispense: 1,\n    sig: 'ml every 4 hours if temp ≥ 38'\n  },\n  {\n    selectmedicine: 'Paracetamol 500 mg',\n    form_unit: 'Tablet',\n    take: 1,\n    sig: 'tablet  every 4 hours if temp ≥ 38'\n  },\n  {\n    selectmedicine: 'Doxofylline  100mg/5 ml',\n    form_unit: 'Bottle',\n    dispense: 1,\n    sig: 'ml 2x a day x 1 week  (7am -7pm)'\n  },\n\n]\n\nconst unit_measure = [\n  'L',\n  'cc',\n  'mL',\n  'tab',\n  'sachet',\n  'Tbsp',\n  'tsp',\n  'fl oz',\n  'pt',\n  'gal',\n  'mcg',\n  'mg',\n  'gm',\n  'kg',\n  'oz',\n  'lbs',\n]\n\nconst form_unitOptions = [\n  'Tablet',\n  'Sachets',\n  'Bottle',\n  'Caps',\n]\n\nexport {\n  unit_measure,\n  form_unitOptions,\n  predictive_medication,\n}\n","/*eslint-disable */\n\nimport React from 'react'\nimport {  Select, Card, Row, Col, Button, Input, Form } from 'antd';\nimport {  withRouter } from 'react-router-dom';\n\nimport { flow_unit, unit_measure } from './control'\n\nconst Option = Select.Option;\nconst FormItem = Form.Item;\nconst { TextArea } = Input;\n\n\nclass CustomForm extends React.Component {\n\n\n    render(){\n\n      const { take, sig, selectmedicine } = this.props.activeRecord;\n\n        return (\n        <Form layout=\"inline\">\n          <FormItem help=\"Take\">\n            <Input style={{width: 50}} value={take} onChange={((e)=>this.props.handleChange('take',e.target.value))}\n            />\n          </FormItem>\n          <FormItem help=\"sig\">\n            <Input style={{width: 400}} value={sig || ''} onChange={((e)=>this.props.handleChange('sig',e.target.value))}\n            />\n          </FormItem>\n          <br/>\n          {\n            selectmedicine ? <Button onClick={this.props.onAddOrder} type={'primary'}>+Insert</Button> : null\n          }\n        </Form>\n        );\n    }\n}\nexport default CustomForm;\n","/*eslint-disable */\n\nimport React from 'react'\nimport {  Select, Card, Row, Col, Button, Input, Form } from 'antd';\nimport {  withRouter } from 'react-router-dom';\n\nimport { flow_unit, unit_measure } from './control'\n\nconst Option = Select.Option;\nconst FormItem = Form.Item;\nconst { TextArea } = Input;\n\n\nclass SachetsForm extends React.Component {\n\n\n    render(){\n\n      const { take, unitofmeasure, frequency, doses, selectmedicine, plus_take, plus_drinks, plus_unitofmeasure } = this.props.activeRecord;\n\n        return (\n        <Form layout=\"inline\">\n          <FormItem help=\"Take\">\n            <Input style={{width: 50}} value={take} onChange={((e)=>this.props.handleChange('take',e.target.value))}\n            />\n          </FormItem>\n          <FormItem help=\"Unit of measure\">\n            <Select\n               showSearch\n               value={unitofmeasure || ''}\n               style={{ width: 100}}\n               onChange={(value)=>this.props.handleChange('unitofmeasure',value)}\n              >\n              {\n                unit_measure.map((item) => {\n                  return (\n                    <Option key={item} value={item}>{item}</Option>\n                  )\n                })\n              }\n            </Select>\n          </FormItem>\n          <FormItem help=\"Plus Take\">\n            <Input style={{width: 150}} value={plus_take || ''} onChange={((e)=>this.props.handleChange('plus_take',e.target.value))}\n            />\n          </FormItem>\n          <FormItem help=\"Plus Unit of measure\">\n            <Select\n               showSearch\n               value={plus_unitofmeasure || ''}\n               style={{ width: 100}}\n               onChange={(value)=>this.props.handleChange('plus_unitofmeasure',value)}\n              >\n              {\n                unit_measure.map((item) => {\n                  return (\n                    <Option key={item} value={item}>{item}</Option>\n                  )\n                })\n              }\n            </Select>\n          </FormItem>\n          <FormItem help=\"Plus Drinks\">\n            <Input style={{width: 100}} value={plus_drinks || ''} onChange={((e)=>this.props.handleChange('plus_drinks',e.target.value))}\n            />\n          </FormItem>\n\n          <FormItem help=\"Frequency\">\n            <Input style={{width: 100}} value={frequency || ''} onChange={((e)=>this.props.handleChange('frequency',e.target.value))}\n            />\n          </FormItem>\n          <FormItem help=\"Duration\">\n            <Input style={{width: 100}} value={doses || ''} onChange={((e)=>this.props.handleChange('doses',e.target.value))}\n            />\n          </FormItem>\n          <br/>\n          {\n            selectmedicine ? <Button onClick={this.props.onAddOrder} type={'primary'}>+Insert</Button> : null\n          }\n        </Form>\n        );\n    }\n}\nexport default SachetsForm;\n","/*eslint-disable */\n\nimport {get, post, put, patch, _delete} from '../utils/RestClients'\nimport { Modal } from 'antd';\n\n\n\nexport let getMedicineList = (callback = null) => {\n    get('/medicines/get').then(response => {\n      callback(response)\n    }).catch( function (err){\n      console.log('getMedicineList',err);\n    })\n}\n\nexport let upsertMedicine = ( payload, callback = null) =>{\n  if (payload.id){\n    post('/medicines/update',payload).then(response => {\n      Modal.success({\n       title: 'Medicine Update',\n       content: 'Success',\n     });\n      callback(response)\n    }).catch( function (err){\n      Modal.error({\n       title: 'Medicine Error',\n       content: 'Error',\n     });\n      console.log('updateMedicine',err);\n    })\n  }else{\n    post('/medicines/create',payload).then(response => {\n      Modal.success({\n       title: 'Medicine Create',\n       content: 'Success',\n     });\n      callback(response)\n    }).catch( function (err){\n      Modal.error({\n       title: 'Medicine Error',\n       content: 'Error',\n     });\n      console.log('createMedicine',err);\n    })\n  }\n}\n\nexport let deleteMedicine = ( id,callback = null) => {\n    get(`/medicines/${id}/destroy`).then(response => {\n      Modal.success({\n       title: 'Medicine Delete',\n       content: 'Success',\n     });\n      callback(response)\n    }).catch( function (err){\n      console.log('deleteMedicine',err);\n    })\n}\n","/*eslint-disable */\n\nimport {get, post, put, patch, _delete} from '../utils/RestClients'\nimport { Modal } from 'antd';\n\n\n\nexport let getTemplateList = (callback = null) => {\n    get('/templates/get').then(response => {\n      callback(response)\n    }).catch( function (err){\n      console.log('getTemplateList',err);\n    })\n}\n\nexport let upsertTemplate = ( payload, callback = null) =>{\n  if (payload.id){\n    post('/templates/update',payload).then(response => {\n      Modal.success({\n       title: 'Template Update',\n       content: 'Success',\n     });\n      callback(response)\n    }).catch( function (err){\n      Modal.error({\n       title: 'Template Error',\n       content: 'Error',\n     });\n      console.log('updateTemplate',err);\n    })\n  }else{\n    post('/templates/create',payload).then(response => {\n      Modal.success({\n       title: 'Template Create',\n       content: 'Success',\n     });\n      callback(response)\n    }).catch( function (err){\n      Modal.error({\n       title: 'Template Error',\n       content: 'Error',\n     });\n      console.log('createTemplate',err);\n    })\n  }\n}\n\nexport let deleteTemplate = ( id,callback = null) => {\n    get(`/templates/${id}/destroy`).then(response => {\n      Modal.success({\n       title: 'Template Delete',\n       content: 'Success',\n     });\n      callback(response)\n    }).catch( function (err){\n      console.log('deleteTemplate',err);\n    })\n}\n","/*eslint-disable */\n\nimport React from 'react'\nimport {  Select, Card, Row, Col, Button, Input, Form, Icon } from 'antd';\nimport {  withRouter } from 'react-router-dom';\nimport update from 'react-addons-update';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport { predictive_medication, unit_measure, form_unitOptions } from './control'\n// import TabletForm from './TabletForm';\n// import IVfluidForm from './IVfluidForm';\n// import TabAndFluidForm from './TabAndFluidForm';\nimport CustomForm from './CustomForm';\nimport SachetsForm from './SachetsForm';\nimport { getMedicineList } from '../../actions/medicine';\nimport { getTemplateList } from '../../actions/template';\nimport printImage from '../../assets/print.png'\n\nconst Option = Select.Option;\nconst FormItem = Form.Item;\nconst { TextArea } = Input;\n\n\nclass NewOrder extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      orderArray: [],\n      order: '',\n      ivfluid: false,\n      tablet: true,\n      activeRecord: {},\n      medicineList:[],\n      templateList:[],\n    }\n  }\n  componentWillMount(){\n    this.fetchMedicineList();\n    this.fetchTemplateList();\n  }\n\n  fetchMedicineList = () => {\n    getMedicineList( (response) => {\n      this.setState({\n        medicineList: response.data || [],\n      })\n    })\n  }\n\n  fetchTemplateList = () =>{\n    getTemplateList( (response) => {\n      this.setState({\n        templateList: response.data || [],\n      })\n    })\n  }\n\n  onPredictiveMedication = (value) => {\n    let findIndex = _.findIndex(this.state.medicineList,{\n      'name': value\n    })\n\n\n    if( findIndex != -1 ){\n      let dataPred = _.clone(this.state.medicineList[findIndex]);\n      delete dataPred.name;\n      dataPred.selectmedicine = value\n      this.setState({\n        activeRecord: {\n          ...dataPred\n        }\n      })\n    }else{\n      this.setState({\n        activeRecord:{\n          selectmedicine: value\n        }\n      })\n    }\n  }\n\n\n\n\n  handleChange = (name,value) => {\n\n    if(name === 'selectmedicine') {\n      this.onPredictiveMedication(value)\n    }else {\n      const payload = {\n        [name]: value\n      }\n      let newUpdate = update(this.state.activeRecord,{\n        $merge: payload\n      })\n      this.setState({\n        activeRecord:newUpdate\n      })\n    }\n\n\n  }\n\n\n\n  handleChangeOrder = (name,value) => {\n    this.setState({\n      [name]: value\n    })\n  }\n\n  onTablet = () => {\n    this.setState({\n      tablet: true,\n      ivfluid: false,\n    })\n  }\n\n  onIVfluid = () => {\n    this.setState({\n      tablet: false,\n      ivfluid: true,\n    })\n  }\n\n\n  onAddOrder = () => {\n      const { order } = this.state;\n      const { take,sig, selectmedicine, form_unit, dispense,brandname } = this.state.activeRecord;\n      const strDispense = dispense ? `#${dispense}`: '';\n      const newOrder = `${selectmedicine || ''} \\n  (${brandname || 'Brand Name'}) ${form_unit || ''}${strDispense || ''} \\n  Sig. Take ${take || ''} ${sig || ''}`\n      let mergeoOrder = order ? `${order} \\n ${newOrder}` : newOrder;\n      this.setState({\n        order: mergeoOrder,\n        activeRecord: {}\n      });\n  }\n\n\n\n  printAndOrder = () => {\n    const { orderArray } = this.state;\n    let payload = {\n      order: JSON.stringify({orderArray}),\n      dateOrder: moment()\n    }\n    this.props.onSumbitOrder(payload)\n    this.setState({\n      activeRecord:{},\n      order: ''\n    })\n  }\n\n  addTemplateOrder = (templateData) => {\n    return ()=>{\n      const { order } = this.state;\n      const newOrder = `${templateData}`\n      let mergeoOrder = `${order} \\n ${newOrder}`;\n      this.setState({\n        order: mergeoOrder,\n        activeRecord: {}\n      })\n    }\n\n  }\n\n  addOrder = () => {\n    const { orderArray, order } = this.state;\n    const newOrderArray = _.clone(orderArray);\n    newOrderArray.push(order)\n    this.setState({\n      orderArray: newOrderArray,\n      order:'',\n      activeRecord:{},\n    })\n  }\n\n  onRemove = (data) => {\n    return ()=>{\n      let cloneOrder = _.clone(this.state.orderArray)\n\t\t\tlet newArray = _.filter(cloneOrder, o => {\n\t\t\t\tif (o !== data) {\n\t\t\t\t\treturn o\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.setState({\n        orderArray: newArray\n      })\n    }\n  }\n\n\n    render(){\n      const { name, address, birthdate, contact_number, weight } = this.props.patientBasicInfo;\n\n      let duration = moment.duration(moment().diff(birthdate));\n      const formatDuration = (duration) => {\n        let years = duration.years();\n        let months = duration.months();\n        let days = duration.days();\n        let result = '';\n        if (years === 1) {\n          result += 'one year ';\n        } else if (years > 1) {\n          result += years + ' years ';\n        }\n        if (months === 1) {\n          result += 'one month ';\n        } else if (months > 1) {\n          result += months + ' months ';\n        }\n        if (days === 1) {\n          result += 'one day ';\n        } else if (days > 1) {\n          result += days + ' days ';\n        }\n        return result;\n      }\n      // let tempData = this.state.templateList.map((item,i)=>{\n      //   item.key = i\n      //   return item;\n      // })\n\n        return (\n          <Card>\n          <Row>\n            <Col span={10}>\n              {/*{\n                tempData.map((item,i)=>{\n                  return(\n                    <Button key={item.key} style={{marginRight:5}} onClick={this.addTemplateOrder(item.data)} type={'primary'} >{item.name}</Button>\n                  )\n                })\n              }\n              <br/>*/}\n              Medicine\n              <br/>\n              <Select\n                 value={this.state.activeRecord.selectmedicine || ''}\n                 showSearch\n                 style={{ width: 500,marginBottom:10 }}\n                 placeholder=\"Select a medicine\"\n                 onChange={(value)=>this.handleChange('selectmedicine',value)}\n                >\n                {\n                  this.state.medicineList.map((item,i) =>{\n                    return(\n                       <Option key={i} value={item.name}>{item.name}</Option>\n                    )\n                  })\n                }\n              </Select>\n              <br/>\n\n              {\n                this.state.activeRecord.selectmedicine ? (\n                  <Form layout=\"inline\">\n                    <FormItem help=\"Brand Name\">\n                      <Input\n                        style={{width: 150, marginLeft: 5}}\n                        value={this.state.activeRecord.brandname || ''}\n                        onChange={((e)=>this.handleChange('brandname',e.target.value))}\n                      />\n                    </FormItem>\n                    <FormItem help=\"Form/Unit\">\n                      <Select\n                         value={this.state.activeRecord.form_unit || ''}\n                         showSearch\n                         style={{ width: 150}}\n                         onChange={(value)=>this.handleChange('form_unit',value)}\n                        >\n                        {\n                          form_unitOptions.map((item) => {\n                            return (\n                              <Option key={item} value={item}>{item}</Option>\n                            )\n                          })\n                        }\n                      </Select>\n                    </FormItem>\n                    <FormItem help=\"Dispense\">\n                      <Input\n                        style={{width: 50, marginLeft: 5}}\n                        value={this.state.activeRecord.dispense || ''}\n                        onChange={((e)=>this.handleChange('dispense',e.target.value))}\n                      />\n                    </FormItem>\n                  </Form>\n                ) : null\n              }\n\n              {\n                this.state.activeRecord.selectmedicine ? (\n                  <CustomForm onAddOrder={this.onAddOrder}   handleChange={this.handleChange} {...this.state}/>\n                ) : null\n              }\n\n              <br/>\n\n              <h2>Order</h2>\n              <TextArea\n                style={{width: 500,marginTop:10}}\n                rows={10}\n                value={this.state.order}\n                onChange={(e)=>this.handleChangeOrder('order',e.target.value)}\n              />\n              <br/>\n              <br/>\n\n              {\n                this.state.order ? (\n                  <Button type={'primary'} onClick={this.addOrder}> Add Order</Button>\n                ) : null\n              }\n\n\n\n\n            </Col>\n            <Col span={14}>\n              {\n                !_.isEmpty(this.state.orderArray) ? (\n                  <Button type={'primary'} onClick={this.printAndOrder}> PRINT AND SUBMIT ORDER</Button>\n                ) : null\n              }\n              <div style={{\n                position: 'relative',\n                height: 800\n               }}>\n\n                 <img src={printImage} style={{position:'absolute', width: 650, height: 800, left: 0, right: 0}}/>\n\n                 <div style={{marginLeft: 80, marginTop: 200,position:'absolute',width: 650}}>\n                   <Row>\n                     <Col span={12}>\n                       <p style={{fontSize: 16,marginBottom: 0,fontWeight:'bold'}}>\n                         Patient: {name}\n                       </p>\n                     </Col>\n                     <Col span={12}>\n                     <p style={{fontSize: 16,fontWeight:'bold',textAlign:'left',marginBottom: 0}}>\n                          Age: {formatDuration(duration)}\n                     </p>\n                     </Col>\n                   </Row>\n                   <Row >\n                     <Col span={12} >\n                       <p style={{fontSize: 16,fontWeight:'bold',marginBottom:0}}>\n                         Address: {address}\n                       </p>\n                     </Col>\n                     <Col span={12}>\n                     <p style={{fontSize: 16,fontWeight:'bold',textAlign:'left',marginBottom:0}}>\n                       Date: {moment().format('YYYY-MM-DD')}\n                     </p>\n                     </Col>\n                     <Col span={12} >\n                     </Col>\n                     <Col span={12} >\n                       <p style={{fontSize: 16,fontWeight:'bold'}}>\n                         Weight: {weight}\n                       </p>\n                     </Col>\n                   </Row>\n                   <div style={{ marginTop: 70,width: 500,marginLeft: 20}}>\n                     <Row>\n                       <Col span={24}>\n                          {\n                            this.state.orderArray.map((item,i)=>{\n                              return(\n                                <pre key={i} style={{fontSize: 12,marginBottom: 0,fontWeight: 'bold',whiteSpace:'pre-wrap'}}>\n                                    <a onClick={this.onRemove(item)} ><Icon type=\"close\" style={{fontSize:15}} /></a> {i+1}. {item}\n                                </pre>\n                              )\n                            })\n                          }\n\n                       </Col>\n                     </Row>\n                   </div>\n\n\n\n                 </div>\n              </div>\n            </Col>\n          </Row>\n          </Card>\n        );\n    }\n}\nexport default withRouter(NewOrder);\n","/*eslint-disable */\n\nimport React from 'react'\nimport { Table, Divider, Tag, Card, Row, Col, Button } from 'antd';\nimport {  withRouter } from 'react-router-dom';\nimport moment from 'moment';\n\nimport { getPatientView, upsertPatient } from '../../actions/patient';\nimport { upsertOrder } from '../../actions/order';\n\nimport NewOrder from '../neworder'\n\n\n\n\nclass PatientView extends React.Component {\n\n  state = {\n    isOrder: false,\n    activeRecord: {},\n  }\n\n  componentWillMount(){\n\n    this.fetchPatientView();\n  }\n\n  fetchPatientView = () => {\n    let patient_id = this.props.match.params.id;\n    getPatientView( patient_id ,(response) => {\n      this.setState({\n        activeRecord: {\n          ...response.data[0],\n          isOrder: false,\n        }\n      })\n    })\n  }\n\n\n  onNewOrderView = () => {\n    this.setState({\n      isOrder: !this.state.isOrder,\n    })\n  }\n\n  onSumbitOrder = (payload) =>{\n    let patient_id = this.props.match.params.id;\n    payload.patientId = patient_id;\n    upsertOrder(payload, (res)=> {\n      this.props.history.push(`/patient/${patient_id}/printview/${res.data.id}`)\n    })\n  }\n\n  onBackPatientList = () => {\n    this.props.history.push(`/`);\n  }\n\n  onPrintView = (orderId,patientId) => {\n    return ()=> {\n      this.props.history.push(`/patient/${patientId}/printview/${orderId}`)\n    }\n  }\n\n  onHasPfPhilhealth = (isActive) => {\n    return () => {\n      let payload = _.clone(this.state.activeRecord)\n      payload.pf_philhealth_has = isActive\n      upsertPatient(payload, (response) => {\n        this.fetchPatientView()\n      })\n    }\n  }\n\n  onHasPf = (isActive) =>{\n    return () =>{\n      let payload = _.clone(this.state.activeRecord)\n      payload.pf_has = isActive\n      upsertPatient(payload, (response) => {\n        this.fetchPatientView()\n      })\n    }\n  }\n\n    render(){\n\n      const columns = [{\n        title: 'Date',\n        key: 'dateOrder',\n        width: 200,\n        fixed: 'left',\n        render: (text, record) => {\n          return (\n            <span>\n              {moment(record.dateOrder).format('YYYY-MM-DD HH:mm a')}\n            </span>\n          )\n        }\n      }, {\n        title: 'Order',\n        key: 'order',\n        width: 1200,\n        render: (text, record) => {\n          let dataOrder = JSON.parse(record.order);\n          let parseOrder = dataOrder.orderArray.map((item,i)=>{\n            return(\n              <pre key={i} style={{fontSize: 16, whiteSpace:'pre-wrap'}}>\n                {i+1}. {item}\n              </pre>\n            )\n          })\n          return parseOrder\n        }\n      }, {\n        title: 'Action',\n        key: 'action',\n        width: 100,\n        fixed: 'right',\n        render: (text, record) => (\n          <span>\n            <Button onClick={this.onPrintView(record.id,this.props.match.params.id)} type=\"dashed\">Print</Button>\n          </span>\n        ),\n      }];\n\n      const { name, address, birthdate, contact_number, Orders, weight, fee, pf, pf_philhealth, pf_has, pf_philhealth_has } = this.state.activeRecord;\n\n\n      let duration = moment.duration(moment().diff(birthdate));\n      const formatDuration = (duration) => {\n        let years = duration.years();\n        let months = duration.months();\n        let days = duration.days();\n        let result = '';\n        if (years === 1) {\n          result += 'one year ';\n        } else if (years > 1) {\n          result += years + ' years ';\n        }\n        if (months === 1) {\n          result += 'one month ';\n        } else if (months > 1) {\n          result += months + ' months ';\n        }\n        if (days === 1) {\n          result += 'one day ';\n        } else if (days > 1) {\n          result += days + ' days ';\n        }\n        return result;\n      }\n\n      let btnwidth = '50%'\n\n      let pfPaid;\n      if (pf_has){\n        pfPaid = <Button onClick={this.onHasPf(false)} style={{ backgroundColor: '#87d068', color: 'white', width: btnwidth }}> PAID</Button>\n      }else{\n        pfPaid = <Button onClick={this.onHasPf(true)} style={{ backgroundColor: '#f50', color: 'white', width: btnwidth }} > NOT PAID</Button>\n      }\n\n      let pfPhilhealthPaid;\n      if (pf_philhealth_has) {\n        pfPhilhealthPaid = <Button onClick={this.onHasPfPhilhealth(false)} style={{ backgroundColor: '#87d068', color: 'white', width: btnwidth }}> PAID</Button>\n      } else {\n        pfPhilhealthPaid = <Button onClick={this.onHasPfPhilhealth(true)} style={{ backgroundColor: '#f50', color: 'white', width: btnwidth}} > NOT PAID</Button>\n      }\n\n        return (\n          <Card>\n          <Button type={'dashed'} onClick={this.onBackPatientList}>Got Back Patient List</Button>\n            <Row type=\"flex\" justify=\"start\">\n            <Col span={12}>\n              <h1 style={{marginBottom:5}}>{name}</h1>\n              <h3>{formatDuration(duration)} old</h3>\n              <h3>{address}</h3>\n              <h3>{contact_number}</h3>\n              <h3>Weight: {weight}</h3>\n            </Col>\n              <Col span={12}>\n              <Card>\n                  <h1>Professional Fee</h1>\n                  {\n                    fee ? (\n                      <div >\n                        <Divider type=\"horizontal\" />\n                        <div style={{ display: 'flex', justifyContent: 'space-between'}}>\n                          <h3>PF: ₱{pf}</h3>\n                          {pfPaid}\n                        </div>\n                        \n                        <Divider type=\"horizontal\" />\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                          <h3>PF PHILHEALTH: ₱{pf} </h3>\n                          {pfPhilhealthPaid}\n                        </div>\n                        \n                      </div>\n                    ) : \n                       <h3>No Fee</h3>\n                    \n                  }\n                  \n              </Card>\n              </Col>\n          </Row>\n          <Row>\n            <Col style={{textAlign:'left',marginBottom:10}} span={4}>\n              <Button onClick={this.onNewOrderView} block size=\"large\" type={this.state.isOrder ? 'danger' : 'primary'}>\n              { this.state.isOrder ? 'View Order' : 'New Order'}\n              </Button>\n            </Col>\n          </Row>\n            {\n              this.state.isOrder ? (\n                <NewOrder onSumbitOrder={this.onSumbitOrder} {...this.props} patientBasicInfo={this.state.activeRecord} />\n              ): <Table scroll={{ x: 1500, y: 600 }} columns={columns} dataSource={ Orders || []} />\n            }\n          </Card>\n        );\n    }\n}\nexport default withRouter(PatientView);\n","/*eslint-disable */\n\nimport React from 'react'\nimport { Modal, Button, Input, Form, DatePicker, Select  } from 'antd';\nimport { form_unitOptions } from '../neworder/control'\n\nconst FormItem = Form.Item;\n\nconst Option = Select.Option;\n\nclass MedicineForm extends React.Component {\n\n\n  onSumbitVal = () => {\n    const { name } = this.props.activeRecord;\n    if(!_.isEmpty(name)){\n      this.props.onSubmit('medicine');\n    }else {\n      Modal.error({\n       title: 'Please Fill up Medicine name',\n       content: 'Error',\n     });\n    }\n  }\n\n    render(){\n      const { visible, onCloseModal } = this.props;\n        return (\n          <Modal\n            title={this.props.activeRecord.id ? 'Edit Medicine' : 'New Medicine'}\n            visible={visible}\n            onCancel={onCloseModal}\n            footer={[\n            <Button key=\"back\" onClick={onCloseModal}>Return</Button>,\n            <Button key=\"submit\" type=\"primary\" onClick={this.onSumbitVal}>\n              Submit\n            </Button>,\n          ]}\n          >\n          <Form layout=\"horizontal\">\n              <FormItem label=\"Name\">\n                <Input value={this.props.activeRecord.name} onChange={((e)=>this.props.handleChange('name',e.target.value))}\n                />\n              </FormItem>\n              <FormItem label=\"Brand Name\">\n                <Input value={this.props.activeRecord.brandname} onChange={((e) => this.props.handleChange('brandname', e.target.value))}\n                />\n              </FormItem>\n              <FormItem label=\"Form/Unit\">\n                <Select\n                  value={this.props.activeRecord.form_unit || ''}\n                  showSearch\n                  onChange={(value) => this.props.handleChange('form_unit', value)}\n                >\n                  {\n                    form_unitOptions.map((item) => {\n                      return (\n                        <Option key={item} value={item}>{item}</Option>\n                      )\n                    })\n                  }\n                </Select>\n              </FormItem>\n              <FormItem label=\"Dispense\">\n                <Input value={this.props.activeRecord.dispense} onChange={((e) => this.props.handleChange('dispense', e.target.value))}\n                />\n              </FormItem>\n              <FormItem label=\"Take\">\n                <Input value={this.props.activeRecord.take} onChange={((e) => this.props.handleChange('take', e.target.value))}\n                />\n              </FormItem>\n              <FormItem label=\"SIG\">\n                <Input value={this.props.activeRecord.sig} onChange={((e) => this.props.handleChange('sig', e.target.value))}\n                />\n              </FormItem>\n          </Form>\n\n          </Modal>\n        );\n    }\n}\nexport default MedicineForm;\n","/*eslint-disable */\n\nimport React from 'react'\nimport { Modal, Button,Input, Form, DatePicker  } from 'antd';\nconst FormItem = Form.Item;\nconst TextArea = Input.TextArea;\n\nclass TemplateForm extends React.Component {\n\n  onSumbitVal = () => {\n    const { name } = this.props.activeRecord;\n    if(!_.isEmpty(name)){\n      this.props.onSubmit('template');\n    }else {\n      Modal.error({\n       title: 'Please Fill up Template name',\n       content: 'Error',\n     });\n    }\n  }\n\n    render(){\n      const { visible, onCloseModal } = this.props;\n        return (\n          <Modal\n            title={this.props.activeRecord.id ? 'Edit Template' : 'New Template'}\n            visible={visible}\n            onCancel={onCloseModal}\n            footer={[\n            <Button key=\"back\" onClick={onCloseModal}>Return</Button>,\n            <Button key=\"submit\" type=\"primary\" onClick={this.onSumbitVal}>\n              Submit\n            </Button>,\n          ]}\n          >\n          <Form layout=\"horizontal\">\n            <FormItem label=\"Name\">\n              <Input value={this.props.activeRecord.name} onChange={((e)=>this.props.handleChange('name',e.target.value))}\n              />\n            </FormItem>\n            <FormItem label=\"Order\">\n              <TextArea rows={20} value={this.props.activeRecord.data} onChange={((e)=>this.props.handleChange('data',e.target.value))}\n              />\n            </FormItem>\n          </Form>\n\n          </Modal>\n        );\n    }\n}\nexport default TemplateForm;\n","/*eslint-disable */\n\nimport React from 'react'\nimport { Table, Divider, Tag, Card, Input, Button, Tabs, Modal } from 'antd';\nimport {  withRouter } from 'react-router-dom';\nimport update from 'react-addons-update';\n\nconst TabPane = Tabs.TabPane;\nconst confirm = Modal.confirm;\n\nimport MedicineForm from './MedicineForm';\nimport TemplateForm from './TemplateForm';\n\n\nimport { getMedicineList, upsertMedicine, deleteMedicine } from '../../actions/medicine';\nimport { getTemplateList, upsertTemplate, deleteTemplate } from '../../actions/template';\n\nclass Settings extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      isSettingsModal: false,\n      isTemplateModal: false,\n      activeRecord:{},\n      medicineList:[],\n      templateList:[],\n    }\n  }\n\n    componentWillMount(){\n      this.fetchMedicineList();\n      this.fetchTemplateList();\n    }\n\n    fetchMedicineList = () => {\n      getMedicineList( (response) => {\n        this.setState({\n          medicineList: response.data || [],\n          activeRecord: {},\n          isSettingsModal: false,\n          isTemplateModal: false,\n\n        })\n      })\n    }\n\n    fetchTemplateList = () =>{\n      getTemplateList( (response) => {\n        this.setState({\n          templateList: response.data || [],\n          activeRecord: {},\n          isSettingsModal: false,\n          isTemplateModal: false,\n\n        })\n      })\n    }\n\n\n    onPatientList = (data) => {\n      this.props.history.push(`/`);\n    }\n\n    onCloseModal = (name) => {\n      return ()=> {\n        this.setState({\n          [name]: false,\n        })\n      }\n    }\n\n    onOpenModal = (name) => {\n      return ()=>{\n        this.setState({\n          [name]: true,\n          activeRecord:{},\n        })\n      }\n\n    }\n\n    handleChange = (name,value) => {\n      const payload = {\n        [name]: value\n      }\n      let newUpdate = update(this.state.activeRecord,{\n        $merge: payload\n      })\n      this.setState({\n        activeRecord:newUpdate\n      })\n    }\n\n    onHandleEdit = (data,name) =>{\n      return ()=>{\n        this.setState({\n          activeRecord:{\n            ...data,\n          },\n          [name]:true,\n        })\n      }\n    }\n\n    onHandleDelete = (data, name) => {\n      return ()=>{\n        let me = this;\n        confirm({\n          title: 'Do you Want to delete these items?',\n          content: data.name,\n          onOk() {\n            if(name === 'medicine'){\n              deleteMedicine(data.id,()=> {\n                me.fetchMedicineList()\n              })\n            }\n            if(name === 'template') {\n              deleteTemplate(data.id, ()=> {\n                me.fetchTemplateList();\n              })\n            }\n\n          },\n          onCancel() {\n            console.log('Cancel');\n          },\n        });\n      }\n    }\n\n    onSubmit = (name) => {\n\n      if(name === 'medicine'){\n        const payload = this.state.activeRecord;\n        upsertMedicine(payload,(response)=>{\n          this.fetchMedicineList()\n        })\n      }\n\n      if(name === 'template'){\n        const payload = this.state.activeRecord;\n        upsertTemplate(payload,(response)=>{\n          this.fetchTemplateList()\n        })\n      }\n\n    }\n\n    render(){\n\n      let dataMedicine = this.state.medicineList.map((item,i)=>{\n        item.key = i\n        return item;\n      })\n\n      const columnsMedicine = [{\n        title: 'Medicine',\n        dataIndex: 'name',\n        key: 'name',\n      }, {\n        title: 'Action',\n        key: 'action',\n        render: (text, record) => (\n          <span>\n            <a onClick={this.onHandleEdit(record,'isSettingsModal')}>Edit</a>\n            <Divider type=\"vertical\" />\n            <a onClick={this.onHandleDelete(record,'medicine')}>Delete</a>\n          </span>\n        ),\n      }];\n\n      let dataTemplate = this.state.templateList.map((item,i)=>{\n        item.key = i\n        return item;\n      })\n\n      const columnsTemplate = [{\n        title: 'Order',\n        dataIndex: 'name',\n        key: 'name',\n      }, {\n        title: 'Action',\n        key: 'action',\n        render: (text, record) => (\n          <span>\n            <a onClick={this.onHandleEdit(record,'isTemplateModal')}>Edit</a>\n            <Divider type=\"vertical\" />\n            <a onClick={this.onHandleDelete(record,'template')}>Delete</a>\n          </span>\n        ),\n      }];\n        return (\n          <Card title={\n            <div>\n              <Button onClick={this.onPatientList}>Back to Patient</Button>\n              <h1>Settings</h1>\n            </div>\n\n          }>\n          <Tabs type=\"card\" defaultActiveKey=\"1\" >\n            <TabPane tab=\"Medicine\" key=\"1\">\n              <Button onClick={this.onOpenModal('isSettingsModal')} type=\"primary\">New Medicine</Button>\n              <br/>\n              <Table columns={columnsMedicine} dataSource={dataMedicine} />\n            </TabPane>\n            {/*<TabPane tab=\"Template Order\" key=\"2\">\n              <Button onClick={this.onOpenModal('isTemplateModal')} type=\"primary\">New Template</Button>\n              <br/>\n              <Table columns={columnsTemplate} dataSource={dataTemplate} />\n            </TabPane>*/}\n          </Tabs>\n\n          {\n            this.state.isSettingsModal ? (\n              <MedicineForm\n                onSubmit={this.onSubmit}\n                visible={this.state.isSettingsModal}\n                onCloseModal={this.onCloseModal('isSettingsModal')}\n                handleChange={this.handleChange}\n                {...this.state}\n              />\n            ) : null\n          }\n\n          {\n            this.state.isTemplateModal ? (\n              <TemplateForm\n                onSubmit={this.onSubmit}\n                visible={this.state.isTemplateModal}\n                onCloseModal={this.onCloseModal('isTemplateModal')}\n                handleChange={this.handleChange}\n                {...this.state}\n              />\n            ) : null\n          }\n\n          </Card>\n        );\n    }\n}\nexport default withRouter(Settings);\n","/*eslint-disable */\n\nimport React from 'react'\nimport ReactToPrint from \"react-to-print\";\nimport { Row, Col, Button } from 'antd';\nimport {  withRouter } from 'react-router-dom';\nimport moment from 'moment'\n\nimport { getPatientView } from '../../actions/patient';\nimport { getOrderView } from '../../actions/order';\nimport printImage from '../../assets/print.png'\n\nclass ComponentToPrint extends React.Component {\n\n  render(){\n    const { name , address, birthdate, contact_number, weight } = this.props.patientInfo\n    const { order } = this.props.orderInfo;\n    let parseOrder;\n    if(order){\n      // let dataOrder = JSON.parse(order);\n      // parseOrder = dataOrder.orderArray.map((item,i)=>{\n      //   return(\n      //     <pre key={i} style={{fontSize: 16, whiteSpace:'pre-wrap'}}>\n      //       {i+1}. {item}\n      //     </pre>\n      //   )\n      // })\n\n      let dataOrder = JSON.parse(order);\n      parseOrder = dataOrder.orderArray.map((item, i) => {\n        return (\n          <pre key={i} style={{ fontSize: 8, marginBottom: 0, fontWeight: 'bold', whiteSpace: 'pre-wrap' }}>\n            {i + 1}. {item}\n          </pre>\n        )\n      })\n    }\n    let duration = moment.duration(moment().diff(birthdate));\n    const formatDuration = (duration) => {\n      let years = duration.years();\n      let months = duration.months();\n      let days = duration.days();\n      let result = '';\n      if (years === 1) {\n        result += 'one year ';\n      } else if (years > 1) {\n        result += years + ' years ';\n      }\n      if (months === 1) {\n        result += 'one month ';\n      } else if (months > 1) {\n        result += months + ' months ';\n      }\n      if (days === 1) {\n        result += 'one day ';\n      } else if (days > 1) {\n        result += days + ' days ';\n      }\n      return result;\n    }\n    return(\n      <div>\n        <div style={{\n          position: 'relative',\n        }}>\n\n          <img src={printImage} style={{ position: 'absolute', width: 480, height: 680, left: 0, right: 0 }} />\n\n          <div style={{ marginLeft: 25, marginTop: 170, position: 'absolute', width: 480 }}>\n            <Row>\n              <Col span={12}>\n                <p style={{ fontSize: 11, marginBottom: 0, fontWeight: 'bold' }}>\n                  Patient: {name}\n                </p>\n              </Col>\n              <Col span={12}>\n                <p style={{ fontSize: 11, fontWeight: 'bold', textAlign: 'left', marginBottom: 0 }}>\n                  Age: {formatDuration(duration)}\n                </p>\n\n              </Col>\n            </Row>\n            <Row >\n              <Col span={12} >\n                <p style={{fontSize: 11,fontWeight:'bold',marginBottom:0}}>\n                  Address: {address}\n                </p>\n              </Col>\n              <Col span={12}>\n                <p style={{fontSize: 11,fontWeight:'bold',textAlign:'left',marginBottom:0}}>\n                  Date: {moment().format('YYYY-MM-DD')}\n                </p>\n              </Col>\n              <Col span={12} >\n              </Col>\n              <Col span={12} >\n                <p style={{fontSize: 11,fontWeight:'bold'}}>\n                  Weight: {weight}\n                </p>\n              </Col>\n            </Row>\n\n            <div style={{ marginTop: 40, width: 400, marginLeft: 30 }}>\n              <Row>\n                <Col span={24}>\n                  {parseOrder}\n                </Col>\n              </Row>\n            </div>\n\n\n\n          </div>\n        </div>\n\n\n\n      </div>\n    )\n  }\n}\n\n\nclass ComponentToPrintNoColor extends React.Component {\n\n  render() {\n    const { name, address, birthdate, contact_number, weight } = this.props.patientInfo\n    const { order } = this.props.orderInfo;\n    let parseOrder;\n    if (order) {\n      let dataOrder = JSON.parse(order);\n      parseOrder = dataOrder.orderArray.map((item, i) => {\n        return (\n          <pre key={i} style={{ fontSize: 8, marginBottom: 0, fontWeight: 'bold', whiteSpace: 'pre-wrap' }}>\n            {i + 1}. {item}\n          </pre>\n        )\n      })\n    }\n    let duration = moment.duration(moment().diff(birthdate));\n    const formatDuration = (duration) => {\n      let years = duration.years();\n      let months = duration.months();\n      let days = duration.days();\n      let result = '';\n      if (years === 1) {\n        result += 'one year ';\n      } else if (years > 1) {\n        result += years + ' years ';\n      }\n      if (months === 1) {\n        result += 'one month ';\n      } else if (months > 1) {\n        result += months + ' months ';\n      }\n      if (days === 1) {\n        result += 'one day ';\n      } else if (days > 1) {\n        result += days + ' days ';\n      }\n      return result;\n    }\n    return (\n      <div>\n        <div style={{\n          position: 'relative',\n        }}>\n          <div style={{ marginLeft: 25, marginTop: 170, position: 'absolute', width: 480 }}>\n            <Row>\n              <Col span={12}>\n                <p style={{ fontSize: 11, marginBottom: 0, fontWeight: 'bold' }}>\n                  Patient: {name}\n                </p>\n              </Col>\n              <Col span={12}>\n                <p style={{ fontSize: 11, fontWeight: 'bold', textAlign: 'left', marginBottom: 0 }}>\n                  Age: {formatDuration(duration)}\n                </p>\n              </Col>\n            </Row>\n            <Row >\n              <Col span={12} >\n                <p style={{fontSize: 11,fontWeight:'bold',marginBottom:0}}>\n                  Address: {address}\n                </p>\n              </Col>\n              <Col span={12}>\n                <p style={{fontSize: 11,fontWeight:'bold',textAlign:'left',marginBottom:0}}>\n                  Date: {moment().format('YYYY-MM-DD')}\n                </p>\n              </Col>\n              <Col span={12} >\n              </Col>\n              <Col span={12} >\n                <p style={{fontSize: 11,fontWeight:'bold'}}>\n                  Weight: {weight}\n                </p>\n              </Col>\n            </Row>\n\n            <div style={{ marginTop: 40, width: 400, marginLeft: 30, }}>\n              <Row>\n                <Col span={24}>\n                  {parseOrder}\n                </Col>\n              </Row>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass PrintView extends React.Component {\n  state = {\n    patientInfo: {},\n    orderInfo:{},\n  }\n\n  componentWillMount(){\n\n    this.fetchPatientView();\n    this.fetchOrderView();\n  }\n\n  fetchPatientView = () => {\n    let patient_id = this.props.match.params.id;\n    getPatientView( patient_id ,(response) => {\n      this.setState({\n        patientInfo: {\n          ...response.data[0],\n        }\n      })\n    })\n  }\n\n  fetchOrderView = () => {\n    let order_id = this.props.match.params.orderId;\n    getOrderView( order_id ,(response) => {\n      this.setState({\n        orderInfo: {\n          ...response.data[0],\n        }\n      })\n    })\n  }\n\n  onBack = () =>{\n    this.props.history.goBack()\n  }\n\n    render(){\n        return (\n          <div>\n          <Button onClick={this.onBack}>\n            Go Back\n          </Button>\n          <ReactToPrint\n            trigger={() => <a><Button type=\"primary\">Print with background!</Button></a>}\n            content={() => this.componentRef}\n          />\n            <ReactToPrint\n              trigger={() => <a><Button type=\"primary\">Print with no backround!</Button></a>}\n              content={() => this.componentRefnoColor}\n            />\n          <ComponentToPrint {...this.state} ref={el => (this.componentRef = el)} />\n          <ComponentToPrintNoColor  {...this.state} ref={el => (this.componentRefnoColor = el)} />\n          </div>\n        );\n    }\n}\nexport default PrintView;\n","/*eslint-disable */\n\nimport React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n// import Home from '../home'\nimport PatientList from '../patientlist';\nimport PatientView from '../patientview';\nimport Settings from '../settings';\nimport PrintView from '../print'\n\nconst App = () => (\n  <div style={{ padding: 20 }}>\n    <main>\n      <Switch>\n        <Route exact path=\"/\" component={PatientList} />\n        <Route exact path=\"/patient/:id\" component={PatientView} />\n        <Route exact path=\"/patient/:id/printview/:orderId\" component={PrintView} />\n        <Route exact path=\"/settings\" component={Settings} />\n      </Switch>\n    </main>\n  </div>\n)\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport store, { history } from './store'\nimport App from './containers/app'\n\nimport 'antd/dist/antd.css';\nimport 'sanitize.css/sanitize.css'\nimport './index.css'\n\nconst target = document.querySelector('#root')\nrender(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <div>\n        <App />\n      </div>\n    </ConnectedRouter>\n  </Provider>,\n  target\n)\n"],"sourceRoot":""}