{"version":3,"sources":["assets/print.png","modules/counter.js","modules/index.js","store.js","containers/newpatient/index.js","utils/RestClients.js","actions/patient.js","containers/patientlist/index.js","actions/order.js","containers/neworder/control.js","containers/neworder/CustomForm.js","containers/neworder/SachetsForm.js","actions/medicine.js","actions/template.js","containers/neworder/index.js","containers/patientview/index.js","containers/settings/MedicineForm.js","containers/settings/TemplateForm.js","containers/settings/index.js","containers/print/index.js","containers/app/index.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","count","isIncrementing","isDecrementing","combineReducers","counter","state","arguments","length","undefined","type","Object","objectSpread","history","createHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","apply","applyMiddleware","concat","createStore","connectRouter","rootReducer","FormItem","Form","Item","NewPatient","onSumbitVal","name","_this","props","activeRecord","_","isEmpty","Modal","error","title","content","onSubmit","_this2","this","_this$props","visible","onCloseModal","react_default","a","createElement","modal","id","onCancel","footer","es_button","key","onClick","es_form","layout","label","input","value","onChange","e","handleChange","target","address","weight","contact_number","pf","pf_philhealth","date_picker","format","birthdate","moment","date","dateString","React","Component","agent","tunnel","proxy","host","port","instance","axios","create","httpsAgent","timeout","headers","Content-Type","get","path","config","post","body","getSearchPatient","callback","then","response","catch","err","console","log","getSearchPatientPf","pf_has","pf_philhealth_has","getPatientView","getPatientList","upsertPatient","payload","fee","success","deletePatient","confirm","PatientList","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onClearFilter","setState","patientList","data","isPfPhilhealth","isPf","fetchPatientListPf","fetchPatientListPfPhilhealth","fetchPatientList","show","onSearchPatientList","searchPatient","onHandleShow","onPatientView","push","isPatientModal","onOpenModal","defineProperty","newUpdate","update","$merge","onSettings","onHandleEdit","onHasPf","isActive","clone","onHasPfPhilhealth","onHandleDelete","onOk","debounce","_this3","columns","dataIndex","render","text","record","style","backgroundColor","color","divider","fontWeight","map","item","i","card","extra","row","justify","col","span","width","marginBottom","placeholder","es_switch","marginLeft","checkedChildren","unCheckedChildren","checked","marginRight","table","dataSource","newpatient","assign","withRouter","upsertOrder","getOrderView","unit_measure","form_unitOptions","Select","Option","CustomForm","Input","TextArea","_this$props$activeRec","take","sig","selectmedicine","CustomForm_FormItem","help","onAddOrder","getMedicineList","upsertMedicine","deleteMedicine","getTemplateList","upsertTemplate","deleteTemplate","NewOrder","fetchMedicineList","medicineList","fetchTemplateList","templateList","onPredictiveMedication","findIndex","dataPred","handleChangeOrder","onTablet","tablet","ivfluid","onIVfluid","order","_this$state$activeRec","form_unit","dispense","brandname","strDispense","newOrder","mergeoOrder","printAndOrder","orderArray","JSON","stringify","dateOrder","onSumbitOrder","addTemplateOrder","templateData","addOrder","_this$state","newOrderArray","onRemove","cloneOrder","newArray","filter","o","_this$props$patientBa","patientBasicInfo","duration","diff","es_select","showSearch","neworder_Option","neworder_FormItem","neworder_CustomForm","neworder_TextArea","marginTop","rows","position","height","src","printImage","left","right","fontSize","textAlign","years","months","days","result","formatDuration","whiteSpace","icon","PatientView","isOrder","fetchPatientView","patient_id","match","params","onNewOrderView","patientId","res","onBackPatientList","onPrintView","orderId","pfPaid","pfPhilhealthPaid","fixed","parse","Orders","display","justifyContent","block","size","neworder","scroll","x","y","MedicineForm","MedicineForm_FormItem","MedicineForm_Option","TemplateForm","TemplateForm_FormItem","TemplateForm_TextArea","TabPane","Tabs","Settings","isSettingsModal","isTemplateModal","onPatientList","_this$setState2","me","assertThisInitialized","dataMedicine","columnsMedicine","tabs","defaultActiveKey","tab","settings_MedicineForm","settings_TemplateForm","ComponentToPrint","parseOrder","_this$props$patientIn","patientInfo","orderInfo","ComponentToPrintNoColor","_this$props$patientIn2","PrintView","fetchOrderView","order_id","onBack","goBack","react_to_print_lib_default","trigger","componentRef","componentRefnoColor","print_ComponentToPrint","ref","el","print_ComponentToPrintNoColor","App","padding","Switch","Route","exact","component","document","querySelector","es","store","lib","app"],"mappings":"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","file":"static/js/main.d2e463e9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/print.01e0a9e7.png\";","export const INCREMENT_REQUESTED = 'counter/INCREMENT_REQUESTED'\r\nexport const INCREMENT = 'counter/INCREMENT'\r\nexport const DECREMENT_REQUESTED = 'counter/DECREMENT_REQUESTED'\r\nexport const DECREMENT = 'counter/DECREMENT'\r\n\r\nconst initialState = {\r\n  count: 0,\r\n  isIncrementing: false,\r\n  isDecrementing: false\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INCREMENT_REQUESTED:\r\n      return {\r\n        ...state,\r\n        isIncrementing: true\r\n      }\r\n\r\n    case INCREMENT:\r\n      return {\r\n        ...state,\r\n        count: state.count + 1,\r\n        isIncrementing: !state.isIncrementing\r\n      }\r\n\r\n    case DECREMENT_REQUESTED:\r\n      return {\r\n        ...state,\r\n        isDecrementing: true\r\n      }\r\n\r\n    case DECREMENT:\r\n      return {\r\n        ...state,\r\n        count: state.count - 1,\r\n        isDecrementing: !state.isDecrementing\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const increment = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: INCREMENT_REQUESTED\r\n    })\r\n\r\n    dispatch({\r\n      type: INCREMENT\r\n    })\r\n  }\r\n}\r\n\r\nexport const incrementAsync = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: INCREMENT_REQUESTED\r\n    })\r\n\r\n    return setTimeout(() => {\r\n      dispatch({\r\n        type: INCREMENT\r\n      })\r\n    }, 3000)\r\n  }\r\n}\r\n\r\nexport const decrement = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: DECREMENT_REQUESTED\r\n    })\r\n\r\n    dispatch({\r\n      type: DECREMENT\r\n    })\r\n  }\r\n}\r\n\r\nexport const decrementAsync = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: DECREMENT_REQUESTED\r\n    })\r\n\r\n    return setTimeout(() => {\r\n      dispatch({\r\n        type: DECREMENT\r\n      })\r\n    }, 3000)\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport counter from './counter'\r\n\r\nexport default combineReducers({\r\n  counter\r\n})\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\r\nimport thunk from 'redux-thunk'\r\nimport createHistory from 'history/createBrowserHistory'\r\nimport rootReducer from './modules'\r\n\r\nexport const history = createHistory()\r\n\r\nconst initialState = {}\r\nconst enhancers = []\r\nconst middleware = [thunk, routerMiddleware(history)]\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\r\n\r\n  if (typeof devToolsExtension === 'function') {\r\n    enhancers.push(devToolsExtension())\r\n  }\r\n}\r\n\r\nconst composedEnhancers = compose(\r\n  applyMiddleware(...middleware),\r\n  ...enhancers\r\n)\r\n\r\nexport default createStore(\r\n  connectRouter(history)(rootReducer),\r\n  initialState,\r\n  composedEnhancers\r\n)\r\n","/*eslint-disable */\r\n\r\nimport React from 'react'\r\nimport { Modal, Button,Input, Form, DatePicker  } from 'antd';\r\nimport moment from 'moment';\r\nimport _ from 'lodash';\r\nconst FormItem = Form.Item;\r\n\r\nclass NewPatient extends React.Component {\r\n  onSumbitVal = () => {\r\n    const { name } = this.props.activeRecord;\r\n    if(!_.isEmpty(name)){\r\n      this.props.onSubmit();\r\n    }else {\r\n      Modal.error({\r\n       title: 'Please Fill up patient name',\r\n       content: 'Error',\r\n     });\r\n    }\r\n  }\r\n    render(){\r\n      const { visible, onCloseModal } = this.props;\r\n        return (\r\n          <Modal\r\n            title={this.props.activeRecord.id ? 'Edit Patient' : 'New Patient'}\r\n            visible={visible}\r\n            onCancel={onCloseModal}\r\n            footer={[\r\n            <Button key=\"back\" onClick={onCloseModal}>Return</Button>,\r\n            <Button key=\"submit\" type=\"primary\" onClick={this.onSumbitVal}>\r\n              Submit\r\n            </Button>,\r\n          ]}\r\n          >\r\n          <Form layout=\"horizontal\">\r\n            <FormItem label=\"Name\">\r\n              <Input value={this.props.activeRecord.name} onChange={((e)=>this.props.handleChange('name',e.target.value))}\r\n              />\r\n            </FormItem>\r\n            <FormItem label=\"Address\">\r\n              <Input value={this.props.activeRecord.address} onChange={((e)=>this.props.handleChange('address',e.target.value))}\r\n              />\r\n            </FormItem>\r\n              <FormItem label=\"Weight\">\r\n                <Input value={this.props.activeRecord.weight} onChange={((e) => this.props.handleChange('weight', e.target.value))}\r\n                />\r\n              </FormItem>\r\n            <FormItem label=\"Contact Number\">\r\n              <Input value={this.props.activeRecord.contact_number} onChange={((e)=>this.props.handleChange('contact_number',e.target.value))}\r\n              />\r\n            </FormItem>\r\n              <FormItem label=\"PF\">\r\n                <Input value={this.props.activeRecord.pf} onChange={((e) => this.props.handleChange('pf', e.target.value))}\r\n                />\r\n              </FormItem>\r\n              <FormItem label=\"PF Philhealth\">\r\n                <Input value={this.props.activeRecord.pf_philhealth} onChange={((e) => this.props.handleChange('pf_philhealth', e.target.value))}\r\n                />\r\n              </FormItem>\r\n            <FormItem label=\"Birthdate\">\r\n              <DatePicker\r\n              format=\"YYYY-MM-DD\"\r\n              value={ this.props.activeRecord.birthdate ? moment(this.props.activeRecord.birthdate) : moment()}\r\n              onChange={((date,dateString)=>this.props.handleChange('birthdate',date))}\r\n              />\r\n            </FormItem>\r\n          </Form>\r\n\r\n          </Modal>\r\n        );\r\n    }\r\n}\r\nexport default NewPatient;\r\n","/*eslint-disable */\r\n\r\nimport axios from 'axios'\r\nimport * as tunnel from 'tunnel';\r\nconst agent = tunnel.httpsOverHttp({\r\n    proxy: {\r\n        host: 'http://localhost',\r\n        port: 8080,\r\n    },\r\n});\r\n// export const baseURL = 'http://localhost:8080'\r\nexport const instance = () => {\r\n    let instance = axios.create({\r\n        // baseURL: baseURL,\r\n        httpsAgent: agent,\r\n        proxy: false,\r\n        timeout: 1000,\r\n        headers: {\r\n            'Content-Type': 'application/json;charset=UTF-8',\r\n        }\r\n    })\r\n    return instance\r\n}\r\n\r\nexport const get = (path, config) => {\r\n    return instance().get(path, config)\r\n}\r\n\r\nexport const post = (path, body, config) => {\r\n    return instance().post(path, body || {}, config)\r\n}\r\n\r\nexport const put = (path, body, config) => {\r\n    return instance().put(path, body || {}, config)\r\n}\r\n\r\nexport const destroy = (path, config) => {\r\n    return instance().delete(path, config)\r\n}\r\n","/*eslint-disable */\r\n\r\nimport {get, post, put, patch, _delete} from '../utils/RestClients'\r\nimport moment from 'moment'\r\nimport { Modal } from 'antd'\r\nimport _ from 'lodash'\r\n\r\nexport let getSearchPatient = (name,callback = null) => {\r\n    let payload = {\r\n      name: name\r\n    }\r\n    post('/patients/getSearch',payload).then(response => {\r\n      callback(response)\r\n    }).catch( function (err){\r\n      console.log('getPatientList',err);\r\n    })\r\n}\r\n\r\nexport let getSearchPatientPf = (pf_has, pf_philhealth_has, callback = null) => {\r\n  let payload = {\r\n     pf_has,\r\n     pf_philhealth_has\r\n  }\r\n  post('/patients/getSearchPf', payload).then(response => {\r\n    callback(response)\r\n  }).catch(function (err) {\r\n    console.log('getSearchPatientPf', err);\r\n  })\r\n}\r\n\r\nexport let getPatientView = (id,callback = null) => {\r\n    get(`/patients/${id}/getPatientView`).then(response => {\r\n      callback(response)\r\n    }).catch( function (err){\r\n      console.log('getPatientList',err);\r\n    })\r\n}\r\n\r\nexport let getPatientList = (callback = null) => {\r\n    get('/patients/get').then(response => {\r\n      callback(response)\r\n    }).catch( function (err){\r\n      console.log('getPatientList',err);\r\n    })\r\n}\r\n\r\nexport let upsertPatient = ( payload, callback = null) =>{\r\n  if (payload.id){\r\n    payload.fee = !_.isEmpty(payload.pf) || !_.isEmpty(payload.pf_philhealth) ? true : false\r\n    post('/patients/update',payload).then(response => {\r\n      Modal.success({\r\n       title: 'Patient Update',\r\n       content: 'Success',\r\n     });\r\n      callback(response)\r\n    }).catch( function (err){\r\n      Modal.error({\r\n       title: 'Patient Error',\r\n       content: 'Error',\r\n     });\r\n      console.log('updatePatient',err);\r\n    })\r\n  }else{\r\n    payload.pf_has = false\r\n    payload.pf_philhealth_has = false\r\n    payload.birthdate = payload.birthdate ? payload.birthdate : moment()\r\n    payload.fee = !_.isEmpty(payload.pf) || !_.isEmpty(payload.pf_philhealth) ? true : false\r\n    post('/patients/create',payload).then(response => {\r\n      Modal.success({\r\n       title: 'Patient Create',\r\n       content: 'Success',\r\n     });\r\n      callback(response)\r\n    }).catch( function (err){\r\n      Modal.error({\r\n       title: 'Patient Error',\r\n       content: 'Error',\r\n     });\r\n      console.log('createPatient',err);\r\n    })\r\n  }\r\n}\r\n\r\nexport let deletePatient = ( id,callback = null) => {\r\n    get(`/patients/${id}/destroy`).then(response => {\r\n      Modal.success({\r\n       title: 'Patient Delete',\r\n       content: 'Success',\r\n     });\r\n      callback(response)\r\n    }).catch( function (err){\r\n      console.log('getPatientList',err);\r\n    })\r\n}\r\n","/*eslint-disable */\r\n\r\nimport React from 'react'\r\nimport { Table, Divider, Tag, Card, Input, Button, Modal, Switch, Row, Col } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport update from 'react-addons-update';\r\nimport _ from 'lodash';\r\n\r\nimport NewPatient from '../newpatient';\r\n\r\nimport { getPatientList, upsertPatient, deletePatient, getSearchPatient, getSearchPatientPf } from '../../actions/patient';\r\nconst confirm = Modal.confirm;\r\n\r\nclass PatientList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isPatientModal: false,\r\n      patientList: [],\r\n      activeRecord: {},\r\n      searchPatient: '',\r\n      isPf: false,\r\n      isPfPhilhealth: false,\r\n      show: false,\r\n    }\r\n\r\n    this.onSearchPatientList = _.debounce(this.onSearchPatientList, 100)\r\n\r\n  }\r\n  componentWillMount() {\r\n    this.fetchPatientList();\r\n  }\r\n\r\n  onClearFilter = () => {\r\n    let pf_has = false\r\n    let pf_philhealth_has = false\r\n    getSearchPatientPf(pf_has, pf_philhealth_has, (response) => {\r\n      this.setState({\r\n        patientList: response.data,\r\n        isPfPhilhealth: false,\r\n        isPf: false\r\n      })\r\n    })\r\n  }\r\n\r\n  fetchPatientListPf = (isPf) => {\r\n    let pf_has = isPf\r\n    let pf_philhealth_has = this.state.isPfPhilhealth\r\n    getSearchPatientPf(pf_has, pf_philhealth_has, (response) => {\r\n      this.setState({\r\n        patientList: response.data,\r\n        isPf\r\n      })\r\n    })\r\n  }\r\n\r\n  fetchPatientListPfPhilhealth = (isPfPhilhealth) => {\r\n    let pf_has = this.state.isPf\r\n    let pf_philhealth_has = isPfPhilhealth\r\n    getSearchPatientPf(pf_has, pf_philhealth_has, (response) => {\r\n      this.setState({\r\n        patientList: response.data,\r\n        isPfPhilhealth\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n  fetchPatientList = () => {\r\n    getPatientList((response) => {\r\n      this.setState({\r\n        patientList: response.data || [],\r\n        activeRecord: {},\r\n        isPf: false,\r\n        isPfPhilhealth: false,\r\n        show:false,\r\n      })\r\n    })\r\n  }\r\n\r\n  \r\n\r\n  onSearchPatientList = (value) => {\r\n    this.setState({\r\n      searchPatient: value,\r\n    }, () => {\r\n      getSearchPatient(value, (response) => {\r\n        this.setState({\r\n          patientList: response.data,\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  onHandleShow = (show) =>{\r\n    if(show){\r\n      let pf_has = this.state.isPf\r\n      let pf_philhealth_has = this.state.isPfPhilhealth\r\n      getSearchPatientPf(pf_has, pf_philhealth_has, (response) => {\r\n        this.setState({\r\n          patientList: response.data,\r\n          show\r\n        })\r\n      })\r\n    }else{\r\n      this.fetchPatientList()\r\n    }\r\n    \r\n  }\r\n\r\n  onPatientView = (data) => {\r\n    return () => {\r\n      this.props.history.push(`/patient/${data.id}`);\r\n    }\r\n  }\r\n\r\n  onCloseModal = () => {\r\n    this.setState({\r\n      isPatientModal: false,\r\n    })\r\n  }\r\n\r\n  onOpenModal = () => {\r\n    this.setState({\r\n      isPatientModal: true,\r\n      activeRecord: {}\r\n    })\r\n  }\r\n\r\n  handleChange = (name, value) => {\r\n    const payload = {\r\n      [name]: value\r\n    }\r\n    let newUpdate = update(this.state.activeRecord, {\r\n      $merge: payload\r\n    })\r\n    this.setState({\r\n      activeRecord: newUpdate\r\n    })\r\n  }\r\n\r\n  onSettings = () => {\r\n    this.props.history.push('/settings')\r\n  }\r\n\r\n  onHandleEdit = (data) => {\r\n    return () => {\r\n      this.setState({\r\n        activeRecord: {\r\n          ...data,\r\n        },\r\n        isPatientModal: true,\r\n      })\r\n    }\r\n  }\r\n\r\n  onHasPf = (data, isActive) => {\r\n    return () =>{\r\n      let payload = _.clone(data)\r\n      payload.pf_has = isActive\r\n      upsertPatient(payload, (response) => {\r\n        this.fetchPatientList()\r\n      })\r\n    }\r\n  }\r\n\r\n  onHasPfPhilhealth = (data, isActive) => {\r\n    return () =>{\r\n      let payload = _.clone(data)\r\n      payload.pf_philhealth_has = isActive\r\n      upsertPatient(payload, (response) => {\r\n        this.fetchPatientList()\r\n      })\r\n    }\r\n  }\r\n\r\n  onHandleDelete = (data) => {\r\n    return () => {\r\n      confirm({\r\n        title: 'Do you Want to delete these patient?',\r\n        content: data.name,\r\n        onOk() {\r\n          deletePatient(data.id, () => {\r\n            this.fetchPatientList()\r\n          })\r\n        },\r\n        onCancel() {\r\n          console.log('Cancel');\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit = () => {\r\n    const payload = this.state.activeRecord;\r\n    upsertPatient(payload, (response) => {\r\n      this.fetchPatientList()\r\n      this.onCloseModal();\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const columns = [{\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    }, {\r\n      title: 'Address',\r\n      dataIndex: 'address',\r\n      key: 'address',\r\n    },\r\n    {\r\n      title: 'Birthdate (YYYY-MM-DD)',\r\n      key: 'birthdate',\r\n      render: (text, record) => {\r\n        return (\r\n          <span>\r\n            {moment(record.birthdate).format('YYYY-MM-DD')}\r\n          </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      title: 'Contact Number',\r\n      key: 'contact_number',\r\n      dataIndex: 'contact_number',\r\n    },\r\n    {\r\n      title: 'Professional fees',\r\n      key: 'pf',\r\n      render: (text, record) => (\r\n        <span>\r\n          {\r\n            !_.isEmpty(record.pf) ?\r\n              record.pf_has ? <Button onClick={this.onHasPf(record, false)} style={{ backgroundColor: '#87d068', color: 'white' }}> PAID</Button> : <Button onClick={this.onHasPf(record, true)} style={{ backgroundColor: '#f50', color: 'white' }} > NOT PAID</Button> : null\r\n          }\r\n          <Divider type=\"vertical\" />\r\n          {record.pf ? <span style={{fontWeight: 'bold'}}>₱{record.pf}</span> : '₱0'}\r\n          \r\n          \r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Professional fees PhilHealth',\r\n      key: 'pf_health',\r\n      render: (text, record) => (\r\n        <span>\r\n          <span>\r\n            {\r\n              !_.isEmpty(record.pf_philhealth) ?\r\n                record.pf_philhealth_has ? <Button onClick={this.onHasPfPhilhealth(record, false)} style={{ backgroundColor: '#87d068', color: 'white' }}> PAID</Button> : <Button onClick={this.onHasPfPhilhealth(record, true)} style={{ backgroundColor: '#f50', color: 'white' }} > NOT PAID</Button> : null\r\n            }\r\n            <Divider type=\"vertical\" />\r\n            {record.pf_philhealth ? <span style={{ fontWeight: 'bold' }}>₱{record.pf_philhealth}</span> : '₱0'}\r\n          </span>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (text, record) => (\r\n        <span>\r\n          <a onClick={this.onHandleEdit(record)}>Edit</a>\r\n          <Divider type=\"vertical\" />\r\n          <a onClick={this.onHandleDelete(record)}>Delete</a>\r\n          <Divider type=\"vertical\" />\r\n          <a onClick={this.onPatientView(record)}>View</a>\r\n        </span>\r\n      ),\r\n    }\r\n    ];\r\n\r\n    let data = this.state.patientList.map((item, i) => {\r\n      item.key = i\r\n      return item;\r\n    })\r\n\r\n    return (\r\n      <Card title={\r\n        <h1>Patient List</h1>\r\n      }\r\n        extra={\r\n          <Button onClick={this.onSettings}>Settings</Button>\r\n        }\r\n      >\r\n        <Row type=\"flex\" justify=\"start\">\r\n          <Col span={7}>\r\n            <Input\r\n              style={{ width: 300, marginBottom: 20 }}\r\n              placeholder=\"Seach Name Patient\"\r\n              value={this.state.searchPatient}\r\n              onChange={(e) => { this.onSearchPatientList(e.target.value) }}\r\n\r\n            />\r\n            <Button onClick={this.onOpenModal} type='primary'>New Patient</Button></Col>\r\n\r\n          \r\n\r\n          <Col span={10}>\r\n            <span style={{ fontWeight: 'bold' }}>\r\n              Show Not Paid\r\n            <Switch style={{marginLeft: 10}} checkedChildren=\"SHOW\" unCheckedChildren=\"NOT SHOW\" checked={this.state.show} onChange={(checked) => this.onHandleShow(checked)} />\r\n            </span>\r\n            {\r\n              this.state.show ? (\r\n                <Card>\r\n                  <span style={{ fontWeight: 'bold' }}>\r\n                    PF\r\n            <Switch style={{ marginLeft: 10 }} checkedChildren=\"PAID\" unCheckedChildren=\"NOT PAID\" checked={this.state.isPf} onChange={(checked) => this.fetchPatientListPf(checked)} />\r\n                  </span>\r\n                  <span style={{ marginLeft: 20, marginRight: 20, fontWeight: 'bold' }}>\r\n                    PF PHILHEALTH\r\n            <Switch style={{ marginLeft: 10 }} checkedChildren=\"PAID\" unCheckedChildren=\"NOT PAID\" checked={this.state.isPfPhilhealth} onChange={(checked) => this.fetchPatientListPfPhilhealth(checked)} />\r\n                  </span>\r\n                  <Button onClick={this.onClearFilter}>Clear Filter</Button>\r\n                </Card>\r\n              ) : null\r\n            }\r\n            \r\n          </Col>\r\n\r\n\r\n\r\n        </Row>\r\n        <Table columns={columns} dataSource={data} />\r\n\r\n        {\r\n          this.state.isPatientModal ? (\r\n            <NewPatient\r\n              handleChange={this.handleChange}\r\n              visible={this.state.isPatientModal}\r\n              onCloseModal={this.onCloseModal}\r\n              onSubmit={this.onSubmit}\r\n              {...this.state}\r\n            />\r\n          ) : null\r\n        }\r\n\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(PatientList);\r\n","/*eslint-disable */\r\n\r\nimport {get, post, put, patch, _delete} from '../utils/RestClients'\r\nimport { Modal } from 'antd';\r\n\r\n\r\n\r\n// export let getMedicineList = (callback = null) => {\r\n//     get('/orders/get').then(response => {\r\n//       callback(response)\r\n//     }).catch( function (err){\r\n//       console.log('getMedicineList',err);\r\n//     })\r\n// }\r\n\r\nexport let upsertOrder = ( payload, callback = null) =>{\r\n  if (payload.id){\r\n    // post('/medicines/update',payload).then(response => {\r\n    //   Modal.success({\r\n    //    title: 'Medicine Update',\r\n    //    content: 'Success',\r\n    //  });\r\n    //   callback(response)\r\n    // }).catch( function (err){\r\n    //   Modal.error({\r\n    //    title: 'Medicine Error',\r\n    //    content: 'Error',\r\n    //  });\r\n    //   console.log('updateMedicine',err);\r\n    // })\r\n  }else{\r\n    post('/orders/create',payload).then(response => {\r\n      Modal.success({\r\n       title: 'Order Create',\r\n       content: 'Success',\r\n     });\r\n      callback(response)\r\n    }).catch( function (err){\r\n      Modal.error({\r\n       title: 'Order Error',\r\n       content: 'Error',\r\n     });\r\n      console.log('createOrder',err);\r\n    })\r\n  }\r\n}\r\n\r\nexport let getOrderView = (id,callback = null) => {\r\n    get(`/orders/${id}/getOrder`).then(response => {\r\n      callback(response)\r\n    }).catch( function (err){\r\n      console.log('getOrderView',err);\r\n    })\r\n}\r\n","const predictive_medication = [\r\n  {\r\n    selectmedicine: 'Amoxicillin 100mg /1 ml',\r\n    dispense: 1,\r\n    form_unit: 'Bottle',\r\n    sig: 'ml 3x a day x 7 days (6am-1pm-8pm)'\r\n  },\r\n  {\r\n    selectmedicine: 'Amoxicillin 250mg/5 ml',\r\n    form_unit: 'Bottle',\r\n    dispense: 1,\r\n    sig: 'ml 3x a day x 7 days (6am-1pm-8pm)'\r\n  },\r\n  {\r\n    selectmedicine: 'Co-Amoxiclav 457mg/5 ml',\r\n    form_unit: 'Bottle',\r\n    dispense: 1,\r\n    sig: 'ml 2x a day x 7 days (7am-7pm)'\r\n  },\r\n  {\r\n    selectmedicine: 'Cefixime 20mg/1 ml',\r\n    form_unit: 'Bottle',\r\n    dispense: 1,\r\n    sig: 'ml 2x a day x 7 days  (7am-7pm)'\r\n  },\r\n  {\r\n    selectmedicine: 'Cefixime 100mg/5ml',\r\n    form_unit: 'Bottle',\r\n    dispense: 1,\r\n    sig: 'ml 2x a day x 7 days  (7am-7pm)'\r\n  },\r\n  {\r\n    selectmedicine: 'Cefuroxime 250mg/5ml',\r\n    form_unit: 'Bottle',\r\n    dispense: 1,\r\n    sig: 'ml 2x a day x 7 days  (7am-7pm)'\r\n  },\r\n  {\r\n    selectmedicine: 'Cefuroxime 500mg',\r\n    form_unit: 'Caps',\r\n    dispense: 1,\r\n    take: '1',\r\n    sig: 'cap 2x a day x 7 days  (7am-7pm)'\r\n  },\r\n  {\r\n    selectmedicine: 'Sultamicillin tosylate 750mg/tab',\r\n    brandname: 'Silgram',\r\n    form_unit: 'Tablet',\r\n    dispense: 14,\r\n    take: '1',\r\n    sig: '1 tab 2x a day x 7 days   (7am-7pm'\r\n  },\r\n  {\r\n    selectmedicine: 'Clarithromycin 250mg/5ml',\r\n    form_unit: 'Bottle',\r\n    dispense: 1,\r\n    sig: 'ml 2x a day x 7 days  (7am-7pm)'\r\n  },\r\n  {\r\n    selectmedicine: 'Azithromycin 200mg/5ml',\r\n    form_unit: 'Bottle',\r\n    dispense: 1,\r\n    sig: 'ml 1x a day  x 7 days  (8 pm)'\r\n  },\r\n  {\r\n    selectmedicine: 'Salbutamol 2mg/5 ml',\r\n    form_unit: 'Bottle',\r\n    dispense: 1,\r\n    sig: 'ml 3x a day x 5 days (6am-1pm-8pm)'\r\n  },\r\n  {\r\n    selectmedicine: 'Salbutamol 2mg/tab',\r\n    form_unit: 'Tablet',\r\n    dispense: 15,\r\n    take: 1,\r\n    sig: 'tab 3x a day x 5 days  (6am-1pm-8pm)'\r\n  },\r\n  {\r\n    selectmedicine: 'Procaterol 25 ug/5 ml',\r\n    form_unit: 'Bottle',\r\n    dispense: 1,\r\n    sig: 'ml 2x a day x 7 days   (7am-7pm)'\r\n  },\r\n  {\r\n    selectmedicine: 'Procaterol 25 ug/5 ml',\r\n    form_unit: 'Bottle',\r\n    dispense: 1,\r\n    sig: 'ml 2x a day x 7 days   (7am-7pm)'\r\n  },\r\n  {\r\n    selectmedicine: 'Procaterol 25ug/tab',\r\n    form_unit: 'Tablet',\r\n    take: 1,\r\n    dispense: 14,\r\n    sig: 'tab 2x a day x 7 days   (7am-7pm)'\r\n  },\r\n  {\r\n    selectmedicine: 'Procaterol 50ug/tab',\r\n    form_unit: 'Tablet',\r\n    take: 1,\r\n    dispense: 14,\r\n    sig: 'tab 2x a day x 7 days   (7am-7pm)'\r\n  },\r\n  {\r\n    selectmedicine: 'N-Acetylcisteine 100mg/5 ml',\r\n    form_unit: 'Bottle',\r\n    dispense: 1,\r\n    sig: 'ml 2x a day x 5 days   (7am-7pm)'\r\n  },\r\n  {\r\n    selectmedicine: 'N-Acetylcysteine 200mg/sachet',\r\n    form_unit: 'Satchets',\r\n    dispense: 14,\r\n    take:1,\r\n    sig: 'sachet plus 10 ml water x 5 days   (7am-7pm)'\r\n  },\r\n  {\r\n    selectmedicine: 'N-Acetylcysteine 600mg/tab',\r\n    form_unit: 'Tablet',\r\n    dispense: 5,\r\n    take:1,\r\n    sig: 'tab plus 1 oz water 1x a day x 5 days  (8pm)'\r\n  },\r\n  {\r\n    selectmedicine: 'Multivitamins plus buclizine syrup',\r\n    brandname:'Biotermin',\r\n    form_unit: 'Bottle',\r\n    dispense: 1,\r\n    sig: 'ml once a day x 2 mos   (8pm)'\r\n  },\r\n  {\r\n    selectmedicine: 'Multivitamins Drops',\r\n    form_unit: 'Bottle',\r\n    dispense: 1,\r\n    sig: 'ml once a day   (8pm)'\r\n  },\r\n  {\r\n    selectmedicine: 'Multivitamins Syrup',\r\n    form_unit: 'Bottle',\r\n    dispense: 1,\r\n    sig: 'ml 1x a day  (8pm)'\r\n  },\r\n  {\r\n    selectmedicine: 'Montelukast 4 mg',\r\n    form_unit: 'Tablet',\r\n    take: 1,\r\n    sig: 'tab 1x a day   (8pm)'\r\n  },\r\n  {\r\n    selectmedicine: 'Montelukast 5 mg',\r\n    form_unit: 'Tablet',\r\n    take: 1,\r\n    sig: 'tab 1x a day   (8pm)'\r\n  },\r\n  {\r\n    selectmedicine: 'Montelukast 10 mg',\r\n    form_unit: 'Tablet',\r\n    unitofmeasure: 'tab',\r\n    take: 1,\r\n    sig: 'tab 1x a day   (8pm)'\r\n  },\r\n  {\r\n    selectmedicine: 'Vit. C syrup',\r\n    form_unit: 'Bottle',\r\n    sig: 'ml once a day   (8pm)'\r\n  },\r\n  {\r\n    selectmedicine: 'Vit, C Drops',\r\n    form_unit: 'Bottle',\r\n    dispense: 1,\r\n    sig: 'ml once a day (8pm)'\r\n  },\r\n  {\r\n    selectmedicine: 'FeSO4 Drops',\r\n    form_unit: 'Bottle',\r\n    dispense: 1,\r\n    sig: 'ml once a day   (8 pm)'\r\n  },\r\n  {\r\n    selectmedicine: 'Cetirizine 2.75mg/ml',\r\n    form_unit: 'Bottle',\r\n    dispense: 1,\r\n    sig: 'ml ____ (1x or 2x  a day) x 1 week (8pm or 7am -7pm)'\r\n  },\r\n  {\r\n    selectmedicine: 'Cetirizine 5mg/5 ml',\r\n    form_unit: 'Bottle',\r\n    dispense: 1,\r\n    sig: 'ml ____ (1x or 2x  a day) x 1 week (8pm or 7am -7pm)'\r\n  },\r\n  {\r\n    selectmedicine: 'Paracetamol 100 mg/ml',\r\n    form_unit: 'Bottle',\r\n    dispense: 1,\r\n    sig: 'ml every 4 hours if temp ≥ 38'\r\n  },\r\n  {\r\n    selectmedicine: 'Paracetamol 120 mg/5 ml',\r\n    form_unit: 'Bottle',\r\n    dispense: 1,\r\n    sig: 'ml every 4 hours if temp ≥ 38'\r\n  },\r\n  {\r\n    selectmedicine: 'Paracetamol 250 mg/5 ml',\r\n    form_unit: 'Bottle',\r\n    dispense: 1,\r\n    sig: 'ml every 4 hours if temp ≥ 38'\r\n  },\r\n  {\r\n    selectmedicine: 'Paracetamol 500 mg',\r\n    form_unit: 'Tablet',\r\n    take: 1,\r\n    sig: 'tablet  every 4 hours if temp ≥ 38'\r\n  },\r\n  {\r\n    selectmedicine: 'Doxofylline  100mg/5 ml',\r\n    form_unit: 'Bottle',\r\n    dispense: 1,\r\n    sig: 'ml 2x a day x 1 week  (7am -7pm)'\r\n  },\r\n\r\n]\r\n\r\nconst unit_measure = [\r\n  'L',\r\n  'cc',\r\n  'mL',\r\n  'tab',\r\n  'sachet',\r\n  'Tbsp',\r\n  'tsp',\r\n  'fl oz',\r\n  'pt',\r\n  'gal',\r\n  'mcg',\r\n  'mg',\r\n  'gm',\r\n  'kg',\r\n  'oz',\r\n  'lbs',\r\n]\r\n\r\nconst form_unitOptions = [\r\n  'Tablet',\r\n  'Sachets',\r\n  'Bottle',\r\n  'Caps',\r\n]\r\n\r\nexport {\r\n  unit_measure,\r\n  form_unitOptions,\r\n  predictive_medication,\r\n}\r\n","/*eslint-disable */\r\n\r\nimport React from 'react'\r\nimport {  Select, Card, Row, Col, Button, Input, Form } from 'antd';\r\nimport {  withRouter } from 'react-router-dom';\r\n\r\nimport { flow_unit, unit_measure } from './control'\r\n\r\nconst Option = Select.Option;\r\nconst FormItem = Form.Item;\r\nconst { TextArea } = Input;\r\n\r\n\r\nclass CustomForm extends React.Component {\r\n\r\n\r\n    render(){\r\n\r\n      const { take, sig, selectmedicine } = this.props.activeRecord;\r\n\r\n        return (\r\n        <Form layout=\"inline\">\r\n          <FormItem help=\"Take\">\r\n            <Input style={{width: 50}} value={take} onChange={((e)=>this.props.handleChange('take',e.target.value))}\r\n            />\r\n          </FormItem>\r\n          <FormItem help=\"sig\">\r\n            <Input style={{width: 400}} value={sig || ''} onChange={((e)=>this.props.handleChange('sig',e.target.value))}\r\n            />\r\n          </FormItem>\r\n          <br/>\r\n          {\r\n            selectmedicine ? <Button onClick={this.props.onAddOrder} type={'primary'}>+Insert</Button> : null\r\n          }\r\n        </Form>\r\n        );\r\n    }\r\n}\r\nexport default CustomForm;\r\n","/*eslint-disable */\r\n\r\nimport React from 'react'\r\nimport {  Select, Card, Row, Col, Button, Input, Form } from 'antd';\r\nimport {  withRouter } from 'react-router-dom';\r\n\r\nimport { flow_unit, unit_measure } from './control'\r\n\r\nconst Option = Select.Option;\r\nconst FormItem = Form.Item;\r\nconst { TextArea } = Input;\r\n\r\n\r\nclass SachetsForm extends React.Component {\r\n\r\n\r\n    render(){\r\n\r\n      const { take, unitofmeasure, frequency, doses, selectmedicine, plus_take, plus_drinks, plus_unitofmeasure } = this.props.activeRecord;\r\n\r\n        return (\r\n        <Form layout=\"inline\">\r\n          <FormItem help=\"Take\">\r\n            <Input style={{width: 50}} value={take} onChange={((e)=>this.props.handleChange('take',e.target.value))}\r\n            />\r\n          </FormItem>\r\n          <FormItem help=\"Unit of measure\">\r\n            <Select\r\n               showSearch\r\n               value={unitofmeasure || ''}\r\n               style={{ width: 100}}\r\n               onChange={(value)=>this.props.handleChange('unitofmeasure',value)}\r\n              >\r\n              {\r\n                unit_measure.map((item) => {\r\n                  return (\r\n                    <Option key={item} value={item}>{item}</Option>\r\n                  )\r\n                })\r\n              }\r\n            </Select>\r\n          </FormItem>\r\n          <FormItem help=\"Plus Take\">\r\n            <Input style={{width: 150}} value={plus_take || ''} onChange={((e)=>this.props.handleChange('plus_take',e.target.value))}\r\n            />\r\n          </FormItem>\r\n          <FormItem help=\"Plus Unit of measure\">\r\n            <Select\r\n               showSearch\r\n               value={plus_unitofmeasure || ''}\r\n               style={{ width: 100}}\r\n               onChange={(value)=>this.props.handleChange('plus_unitofmeasure',value)}\r\n              >\r\n              {\r\n                unit_measure.map((item) => {\r\n                  return (\r\n                    <Option key={item} value={item}>{item}</Option>\r\n                  )\r\n                })\r\n              }\r\n            </Select>\r\n          </FormItem>\r\n          <FormItem help=\"Plus Drinks\">\r\n            <Input style={{width: 100}} value={plus_drinks || ''} onChange={((e)=>this.props.handleChange('plus_drinks',e.target.value))}\r\n            />\r\n          </FormItem>\r\n\r\n          <FormItem help=\"Frequency\">\r\n            <Input style={{width: 100}} value={frequency || ''} onChange={((e)=>this.props.handleChange('frequency',e.target.value))}\r\n            />\r\n          </FormItem>\r\n          <FormItem help=\"Duration\">\r\n            <Input style={{width: 100}} value={doses || ''} onChange={((e)=>this.props.handleChange('doses',e.target.value))}\r\n            />\r\n          </FormItem>\r\n          <br/>\r\n          {\r\n            selectmedicine ? <Button onClick={this.props.onAddOrder} type={'primary'}>+Insert</Button> : null\r\n          }\r\n        </Form>\r\n        );\r\n    }\r\n}\r\nexport default SachetsForm;\r\n","/*eslint-disable */\r\n\r\nimport {get, post, put, patch, _delete} from '../utils/RestClients'\r\nimport { Modal } from 'antd';\r\n\r\n\r\n\r\nexport let getMedicineList = (callback = null) => {\r\n    get('/medicines/get').then(response => {\r\n      callback(response)\r\n    }).catch( function (err){\r\n      console.log('getMedicineList',err);\r\n    })\r\n}\r\n\r\nexport let upsertMedicine = ( payload, callback = null) =>{\r\n  if (payload.id){\r\n    post('/medicines/update',payload).then(response => {\r\n      Modal.success({\r\n       title: 'Medicine Update',\r\n       content: 'Success',\r\n     });\r\n      callback(response)\r\n    }).catch( function (err){\r\n      Modal.error({\r\n       title: 'Medicine Error',\r\n       content: 'Error',\r\n     });\r\n      console.log('updateMedicine',err);\r\n    })\r\n  }else{\r\n    post('/medicines/create',payload).then(response => {\r\n      Modal.success({\r\n       title: 'Medicine Create',\r\n       content: 'Success',\r\n     });\r\n      callback(response)\r\n    }).catch( function (err){\r\n      Modal.error({\r\n       title: 'Medicine Error',\r\n       content: 'Error',\r\n     });\r\n      console.log('createMedicine',err);\r\n    })\r\n  }\r\n}\r\n\r\nexport let deleteMedicine = ( id,callback = null) => {\r\n    get(`/medicines/${id}/destroy`).then(response => {\r\n      Modal.success({\r\n       title: 'Medicine Delete',\r\n       content: 'Success',\r\n     });\r\n      callback(response)\r\n    }).catch( function (err){\r\n      console.log('deleteMedicine',err);\r\n    })\r\n}\r\n","/*eslint-disable */\r\n\r\nimport {get, post, put, patch, _delete} from '../utils/RestClients'\r\nimport { Modal } from 'antd';\r\n\r\n\r\n\r\nexport let getTemplateList = (callback = null) => {\r\n    get('/templates/get').then(response => {\r\n      callback(response)\r\n    }).catch( function (err){\r\n      console.log('getTemplateList',err);\r\n    })\r\n}\r\n\r\nexport let upsertTemplate = ( payload, callback = null) =>{\r\n  if (payload.id){\r\n    post('/templates/update',payload).then(response => {\r\n      Modal.success({\r\n       title: 'Template Update',\r\n       content: 'Success',\r\n     });\r\n      callback(response)\r\n    }).catch( function (err){\r\n      Modal.error({\r\n       title: 'Template Error',\r\n       content: 'Error',\r\n     });\r\n      console.log('updateTemplate',err);\r\n    })\r\n  }else{\r\n    post('/templates/create',payload).then(response => {\r\n      Modal.success({\r\n       title: 'Template Create',\r\n       content: 'Success',\r\n     });\r\n      callback(response)\r\n    }).catch( function (err){\r\n      Modal.error({\r\n       title: 'Template Error',\r\n       content: 'Error',\r\n     });\r\n      console.log('createTemplate',err);\r\n    })\r\n  }\r\n}\r\n\r\nexport let deleteTemplate = ( id,callback = null) => {\r\n    get(`/templates/${id}/destroy`).then(response => {\r\n      Modal.success({\r\n       title: 'Template Delete',\r\n       content: 'Success',\r\n     });\r\n      callback(response)\r\n    }).catch( function (err){\r\n      console.log('deleteTemplate',err);\r\n    })\r\n}\r\n","/*eslint-disable */\r\n\r\nimport React from 'react'\r\nimport {  Select, Card, Row, Col, Button, Input, Form, Icon } from 'antd';\r\nimport {  withRouter } from 'react-router-dom';\r\nimport update from 'react-addons-update';\r\nimport moment from 'moment';\r\nimport _ from 'lodash';\r\nimport { predictive_medication, unit_measure, form_unitOptions } from './control'\r\n// import TabletForm from './TabletForm';\r\n// import IVfluidForm from './IVfluidForm';\r\n// import TabAndFluidForm from './TabAndFluidForm';\r\nimport CustomForm from './CustomForm';\r\nimport SachetsForm from './SachetsForm';\r\nimport { getMedicineList } from '../../actions/medicine';\r\nimport { getTemplateList } from '../../actions/template';\r\nimport printImage from '../../assets/print.png'\r\n\r\nconst Option = Select.Option;\r\nconst FormItem = Form.Item;\r\nconst { TextArea } = Input;\r\n\r\n\r\nclass NewOrder extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      orderArray: [],\r\n      order: '',\r\n      ivfluid: false,\r\n      tablet: true,\r\n      activeRecord: {},\r\n      medicineList:[],\r\n      templateList:[],\r\n    }\r\n  }\r\n  componentWillMount(){\r\n    this.fetchMedicineList();\r\n    this.fetchTemplateList();\r\n  }\r\n\r\n  fetchMedicineList = () => {\r\n    getMedicineList( (response) => {\r\n      this.setState({\r\n        medicineList: response.data || [],\r\n      })\r\n    })\r\n  }\r\n\r\n  fetchTemplateList = () =>{\r\n    getTemplateList( (response) => {\r\n      this.setState({\r\n        templateList: response.data || [],\r\n      })\r\n    })\r\n  }\r\n\r\n  onPredictiveMedication = (value) => {\r\n    let findIndex = _.findIndex(this.state.medicineList,{\r\n      'name': value\r\n    })\r\n\r\n\r\n    if( findIndex != -1 ){\r\n      let dataPred = _.clone(this.state.medicineList[findIndex]);\r\n      delete dataPred.name;\r\n      dataPred.selectmedicine = value\r\n      this.setState({\r\n        activeRecord: {\r\n          ...dataPred\r\n        }\r\n      })\r\n    }else{\r\n      this.setState({\r\n        activeRecord:{\r\n          selectmedicine: value\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  handleChange = (name,value) => {\r\n\r\n    if(name === 'selectmedicine') {\r\n      this.onPredictiveMedication(value)\r\n    }else {\r\n      const payload = {\r\n        [name]: value\r\n      }\r\n      let newUpdate = update(this.state.activeRecord,{\r\n        $merge: payload\r\n      })\r\n      this.setState({\r\n        activeRecord:newUpdate\r\n      })\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  handleChangeOrder = (name,value) => {\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  onTablet = () => {\r\n    this.setState({\r\n      tablet: true,\r\n      ivfluid: false,\r\n    })\r\n  }\r\n\r\n  onIVfluid = () => {\r\n    this.setState({\r\n      tablet: false,\r\n      ivfluid: true,\r\n    })\r\n  }\r\n\r\n\r\n  onAddOrder = () => {\r\n      const { order } = this.state;\r\n      const { take,sig, selectmedicine, form_unit, dispense,brandname } = this.state.activeRecord;\r\n      const strDispense = dispense ? `#${dispense}`: '';\r\n      const newOrder = `${selectmedicine || ''} \\n  (${brandname || 'Brand Name'}) ${form_unit || ''}${strDispense || ''} \\n  Sig. Take ${take || ''} ${sig || ''}`\r\n      let mergeoOrder = order ? `${order} \\n ${newOrder}` : newOrder;\r\n      this.setState({\r\n        order: mergeoOrder,\r\n        activeRecord: {}\r\n      });\r\n  }\r\n\r\n\r\n\r\n  printAndOrder = () => {\r\n    const { orderArray } = this.state;\r\n    let payload = {\r\n      order: JSON.stringify({orderArray}),\r\n      dateOrder: moment()\r\n    }\r\n    this.props.onSumbitOrder(payload)\r\n    this.setState({\r\n      activeRecord:{},\r\n      order: ''\r\n    })\r\n  }\r\n\r\n  addTemplateOrder = (templateData) => {\r\n    return ()=>{\r\n      const { order } = this.state;\r\n      const newOrder = `${templateData}`\r\n      let mergeoOrder = `${order} \\n ${newOrder}`;\r\n      this.setState({\r\n        order: mergeoOrder,\r\n        activeRecord: {}\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  addOrder = () => {\r\n    const { orderArray, order } = this.state;\r\n    const newOrderArray = _.clone(orderArray);\r\n    newOrderArray.push(order)\r\n    this.setState({\r\n      orderArray: newOrderArray,\r\n      order:'',\r\n      activeRecord:{},\r\n    })\r\n  }\r\n\r\n  onRemove = (data) => {\r\n    return ()=>{\r\n      let cloneOrder = _.clone(this.state.orderArray)\r\n\t\t\tlet newArray = _.filter(cloneOrder, o => {\r\n\t\t\t\tif (o !== data) {\r\n\t\t\t\t\treturn o\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tthis.setState({\r\n        orderArray: newArray\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n    render(){\r\n      const { name, address, birthdate, contact_number, weight } = this.props.patientBasicInfo;\r\n\r\n      let duration = moment.duration(moment().diff(birthdate));\r\n      const formatDuration = (duration) => {\r\n        let years = duration.years();\r\n        let months = duration.months();\r\n        let days = duration.days();\r\n        let result = '';\r\n        if (years === 1) {\r\n          result += 'one year ';\r\n        } else if (years > 1) {\r\n          result += years + ' years ';\r\n        }\r\n        if (months === 1) {\r\n          result += 'one month ';\r\n        } else if (months > 1) {\r\n          result += months + ' months ';\r\n        }\r\n        if (days === 1) {\r\n          result += 'one day ';\r\n        } else if (days > 1) {\r\n          result += days + ' days ';\r\n        }\r\n        return result;\r\n      }\r\n      // let tempData = this.state.templateList.map((item,i)=>{\r\n      //   item.key = i\r\n      //   return item;\r\n      // })\r\n\r\n        return (\r\n          <Card>\r\n          <Row>\r\n            <Col span={10}>\r\n              {/*{\r\n                tempData.map((item,i)=>{\r\n                  return(\r\n                    <Button key={item.key} style={{marginRight:5}} onClick={this.addTemplateOrder(item.data)} type={'primary'} >{item.name}</Button>\r\n                  )\r\n                })\r\n              }\r\n              <br/>*/}\r\n              Medicine\r\n              <br/>\r\n              <Select\r\n                 value={this.state.activeRecord.selectmedicine || ''}\r\n                 showSearch\r\n                 style={{ width: 500,marginBottom:10 }}\r\n                 placeholder=\"Select a medicine\"\r\n                 onChange={(value)=>this.handleChange('selectmedicine',value)}\r\n                >\r\n                {\r\n                  this.state.medicineList.map((item,i) =>{\r\n                    return(\r\n                       <Option key={i} value={item.name}>{item.name}</Option>\r\n                    )\r\n                  })\r\n                }\r\n              </Select>\r\n              <br/>\r\n\r\n              {\r\n                this.state.activeRecord.selectmedicine ? (\r\n                  <Form layout=\"inline\">\r\n                    <FormItem help=\"Brand Name\">\r\n                      <Input\r\n                        style={{width: 150, marginLeft: 5}}\r\n                        value={this.state.activeRecord.brandname || ''}\r\n                        onChange={((e)=>this.handleChange('brandname',e.target.value))}\r\n                      />\r\n                    </FormItem>\r\n                    <FormItem help=\"Form/Unit\">\r\n                      <Select\r\n                         value={this.state.activeRecord.form_unit || ''}\r\n                         showSearch\r\n                         style={{ width: 150}}\r\n                         onChange={(value)=>this.handleChange('form_unit',value)}\r\n                        >\r\n                        {\r\n                          form_unitOptions.map((item) => {\r\n                            return (\r\n                              <Option key={item} value={item}>{item}</Option>\r\n                            )\r\n                          })\r\n                        }\r\n                      </Select>\r\n                    </FormItem>\r\n                    <FormItem help=\"Dispense\">\r\n                      <Input\r\n                        style={{width: 50, marginLeft: 5}}\r\n                        value={this.state.activeRecord.dispense || ''}\r\n                        onChange={((e)=>this.handleChange('dispense',e.target.value))}\r\n                      />\r\n                    </FormItem>\r\n                  </Form>\r\n                ) : null\r\n              }\r\n\r\n              {\r\n                this.state.activeRecord.selectmedicine ? (\r\n                  <CustomForm onAddOrder={this.onAddOrder}   handleChange={this.handleChange} {...this.state}/>\r\n                ) : null\r\n              }\r\n\r\n              <br/>\r\n\r\n              <h2>Order</h2>\r\n              <TextArea\r\n                style={{width: 500,marginTop:10}}\r\n                rows={10}\r\n                value={this.state.order}\r\n                onChange={(e)=>this.handleChangeOrder('order',e.target.value)}\r\n              />\r\n              <br/>\r\n              <br/>\r\n\r\n              {\r\n                this.state.order ? (\r\n                  <Button type={'primary'} onClick={this.addOrder}> Add Order</Button>\r\n                ) : null\r\n              }\r\n\r\n\r\n\r\n\r\n            </Col>\r\n            <Col span={14}>\r\n              {\r\n                !_.isEmpty(this.state.orderArray) ? (\r\n                  <Button type={'primary'} onClick={this.printAndOrder}> PRINT AND SUBMIT ORDER</Button>\r\n                ) : null\r\n              }\r\n              <div style={{\r\n                position: 'relative',\r\n                height: 800\r\n               }}>\r\n\r\n                 <img src={printImage} style={{position:'absolute', width: 650, height: 800, left: 0, right: 0}}/>\r\n\r\n                 <div style={{marginLeft: 80, marginTop: 200,position:'absolute',width: 650}}>\r\n                   <Row>\r\n                     <Col span={12}>\r\n                       <p style={{fontSize: 16,marginBottom: 0,fontWeight:'bold'}}>\r\n                         Patient: {name}\r\n                       </p>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                     <p style={{fontSize: 16,fontWeight:'bold',textAlign:'left',marginBottom: 0}}>\r\n                          Age: {formatDuration(duration)}\r\n                     </p>\r\n                     </Col>\r\n                   </Row>\r\n                   <Row >\r\n                     <Col span={12} >\r\n                       <p style={{fontSize: 16,fontWeight:'bold',marginBottom:0}}>\r\n                         Address: {address}\r\n                       </p>\r\n                     </Col>\r\n                     <Col span={12}>\r\n                     <p style={{fontSize: 16,fontWeight:'bold',textAlign:'left',marginBottom:0}}>\r\n                       Date: {moment().format('YYYY-MM-DD')}\r\n                     </p>\r\n                     </Col>\r\n                     <Col span={12} >\r\n                     </Col>\r\n                     <Col span={12} >\r\n                       <p style={{fontSize: 16,fontWeight:'bold'}}>\r\n                         Weight: {weight}\r\n                       </p>\r\n                     </Col>\r\n                   </Row>\r\n                   <div style={{ marginTop: 70,width: 500,marginLeft: 20}}>\r\n                     <Row>\r\n                       <Col span={24}>\r\n                          {\r\n                            this.state.orderArray.map((item,i)=>{\r\n                              return(\r\n                                <pre key={i} style={{fontSize: 12,marginBottom: 0,fontWeight: 'bold',whiteSpace:'pre-wrap'}}>\r\n                                    <a onClick={this.onRemove(item)} ><Icon type=\"close\" style={{fontSize:15}} /></a> {i+1}. {item}\r\n                                </pre>\r\n                              )\r\n                            })\r\n                          }\r\n\r\n                       </Col>\r\n                     </Row>\r\n                   </div>\r\n\r\n\r\n\r\n                 </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          </Card>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(NewOrder);\r\n","/*eslint-disable */\r\n\r\nimport React from 'react'\r\nimport { Table, Divider, Tag, Card, Row, Col, Button } from 'antd';\r\nimport {  withRouter } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nimport { getPatientView, upsertPatient } from '../../actions/patient';\r\nimport { upsertOrder } from '../../actions/order';\r\n\r\nimport NewOrder from '../neworder'\r\n\r\n\r\n\r\n\r\nclass PatientView extends React.Component {\r\n\r\n  state = {\r\n    isOrder: false,\r\n    activeRecord: {},\r\n  }\r\n\r\n  componentWillMount(){\r\n\r\n    this.fetchPatientView();\r\n  }\r\n\r\n  fetchPatientView = () => {\r\n    let patient_id = this.props.match.params.id;\r\n    getPatientView( patient_id ,(response) => {\r\n      this.setState({\r\n        activeRecord: {\r\n          ...response.data[0],\r\n          isOrder: false,\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  onNewOrderView = () => {\r\n    this.setState({\r\n      isOrder: !this.state.isOrder,\r\n    })\r\n  }\r\n\r\n  onSumbitOrder = (payload) =>{\r\n    let patient_id = this.props.match.params.id;\r\n    payload.patientId = patient_id;\r\n    upsertOrder(payload, (res)=> {\r\n      this.props.history.push(`/patient/${patient_id}/printview/${res.data.id}`)\r\n    })\r\n  }\r\n\r\n  onBackPatientList = () => {\r\n    this.props.history.push(`/`);\r\n  }\r\n\r\n  onPrintView = (orderId,patientId) => {\r\n    return ()=> {\r\n      this.props.history.push(`/patient/${patientId}/printview/${orderId}`)\r\n    }\r\n  }\r\n\r\n  onHasPfPhilhealth = (isActive) => {\r\n    return () => {\r\n      let payload = _.clone(this.state.activeRecord)\r\n      payload.pf_philhealth_has = isActive\r\n      upsertPatient(payload, (response) => {\r\n        this.fetchPatientView()\r\n      })\r\n    }\r\n  }\r\n\r\n  onHasPf = (isActive) =>{\r\n    return () =>{\r\n      let payload = _.clone(this.state.activeRecord)\r\n      payload.pf_has = isActive\r\n      upsertPatient(payload, (response) => {\r\n        this.fetchPatientView()\r\n      })\r\n    }\r\n  }\r\n\r\n    render(){\r\n\r\n      const columns = [{\r\n        title: 'Date',\r\n        key: 'dateOrder',\r\n        width: 200,\r\n        fixed: 'left',\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              {moment(record.dateOrder).format('YYYY-MM-DD HH:mm a')}\r\n            </span>\r\n          )\r\n        }\r\n      }, {\r\n        title: 'Order',\r\n        key: 'order',\r\n        width: 1200,\r\n        render: (text, record) => {\r\n          let dataOrder = JSON.parse(record.order);\r\n          let parseOrder = dataOrder.orderArray.map((item,i)=>{\r\n            return(\r\n              <pre key={i} style={{fontSize: 16, whiteSpace:'pre-wrap'}}>\r\n                {i+1}. {item}\r\n              </pre>\r\n            )\r\n          })\r\n          return parseOrder\r\n        }\r\n      }, {\r\n        title: 'Action',\r\n        key: 'action',\r\n        width: 100,\r\n        fixed: 'right',\r\n        render: (text, record) => (\r\n          <span>\r\n            <Button onClick={this.onPrintView(record.id,this.props.match.params.id)} type=\"dashed\">Print</Button>\r\n          </span>\r\n        ),\r\n      }];\r\n\r\n      const { name, address, birthdate, contact_number, Orders, weight, fee, pf, pf_philhealth, pf_has, pf_philhealth_has } = this.state.activeRecord;\r\n\r\n\r\n      let duration = moment.duration(moment().diff(birthdate));\r\n      const formatDuration = (duration) => {\r\n        let years = duration.years();\r\n        let months = duration.months();\r\n        let days = duration.days();\r\n        let result = '';\r\n        if (years === 1) {\r\n          result += 'one year ';\r\n        } else if (years > 1) {\r\n          result += years + ' years ';\r\n        }\r\n        if (months === 1) {\r\n          result += 'one month ';\r\n        } else if (months > 1) {\r\n          result += months + ' months ';\r\n        }\r\n        if (days === 1) {\r\n          result += 'one day ';\r\n        } else if (days > 1) {\r\n          result += days + ' days ';\r\n        }\r\n        return result;\r\n      }\r\n\r\n      let btnwidth = '50%'\r\n\r\n      let pfPaid;\r\n      if (pf_has){\r\n        pfPaid = <Button onClick={this.onHasPf(false)} style={{ backgroundColor: '#87d068', color: 'white', width: btnwidth }}> PAID</Button>\r\n      }else{\r\n        pfPaid = <Button onClick={this.onHasPf(true)} style={{ backgroundColor: '#f50', color: 'white', width: btnwidth }} > NOT PAID</Button>\r\n      }\r\n\r\n      let pfPhilhealthPaid;\r\n      if (pf_philhealth_has) {\r\n        pfPhilhealthPaid = <Button onClick={this.onHasPfPhilhealth(false)} style={{ backgroundColor: '#87d068', color: 'white', width: btnwidth }}> PAID</Button>\r\n      } else {\r\n        pfPhilhealthPaid = <Button onClick={this.onHasPfPhilhealth(true)} style={{ backgroundColor: '#f50', color: 'white', width: btnwidth}} > NOT PAID</Button>\r\n      }\r\n\r\n        return (\r\n          <Card>\r\n          <Button type={'dashed'} onClick={this.onBackPatientList}>Got Back Patient List</Button>\r\n            <Row type=\"flex\" justify=\"start\">\r\n            <Col span={12}>\r\n              <h1 style={{marginBottom:5}}>{name}</h1>\r\n              <h3>{formatDuration(duration)} old</h3>\r\n              <h3>{address}</h3>\r\n              <h3>{contact_number}</h3>\r\n              <h3>Weight: {weight}</h3>\r\n            </Col>\r\n              <Col span={12}>\r\n              <Card>\r\n                  <h1>Professional Fee</h1>\r\n                  {\r\n                    fee ? (\r\n                      <div >\r\n                        <Divider type=\"horizontal\" />\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between'}}>\r\n                          <h3>PF: ₱{pf}</h3>\r\n                          {pfPaid}\r\n                        </div>\r\n                        \r\n                        <Divider type=\"horizontal\" />\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                          <h3>PF PHILHEALTH: ₱{pf} </h3>\r\n                          {pfPhilhealthPaid}\r\n                        </div>\r\n                        \r\n                      </div>\r\n                    ) : \r\n                       <h3>No Fee</h3>\r\n                    \r\n                  }\r\n                  \r\n              </Card>\r\n              </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col style={{textAlign:'left',marginBottom:10}} span={4}>\r\n              <Button onClick={this.onNewOrderView} block size=\"large\" type={this.state.isOrder ? 'danger' : 'primary'}>\r\n              { this.state.isOrder ? 'View Order' : 'New Order'}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n            {\r\n              this.state.isOrder ? (\r\n                <NewOrder onSumbitOrder={this.onSumbitOrder} {...this.props} patientBasicInfo={this.state.activeRecord} />\r\n              ): <Table scroll={{ x: 1500, y: 600 }} columns={columns} dataSource={ Orders || []} />\r\n            }\r\n          </Card>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(PatientView);\r\n","/*eslint-disable */\r\n\r\nimport React from 'react'\r\nimport { Modal, Button, Input, Form, DatePicker, Select  } from 'antd';\r\nimport { form_unitOptions } from '../neworder/control'\r\n\r\nconst FormItem = Form.Item;\r\n\r\nconst Option = Select.Option;\r\n\r\nclass MedicineForm extends React.Component {\r\n\r\n\r\n  onSumbitVal = () => {\r\n    const { name } = this.props.activeRecord;\r\n    if(!_.isEmpty(name)){\r\n      this.props.onSubmit('medicine');\r\n    }else {\r\n      Modal.error({\r\n       title: 'Please Fill up Medicine name',\r\n       content: 'Error',\r\n     });\r\n    }\r\n  }\r\n\r\n    render(){\r\n      const { visible, onCloseModal } = this.props;\r\n        return (\r\n          <Modal\r\n            title={this.props.activeRecord.id ? 'Edit Medicine' : 'New Medicine'}\r\n            visible={visible}\r\n            onCancel={onCloseModal}\r\n            footer={[\r\n            <Button key=\"back\" onClick={onCloseModal}>Return</Button>,\r\n            <Button key=\"submit\" type=\"primary\" onClick={this.onSumbitVal}>\r\n              Submit\r\n            </Button>,\r\n          ]}\r\n          >\r\n          <Form layout=\"horizontal\">\r\n              <FormItem label=\"Name\">\r\n                <Input value={this.props.activeRecord.name} onChange={((e)=>this.props.handleChange('name',e.target.value))}\r\n                />\r\n              </FormItem>\r\n              <FormItem label=\"Brand Name\">\r\n                <Input value={this.props.activeRecord.brandname} onChange={((e) => this.props.handleChange('brandname', e.target.value))}\r\n                />\r\n              </FormItem>\r\n              <FormItem label=\"Form/Unit\">\r\n                <Select\r\n                  value={this.props.activeRecord.form_unit || ''}\r\n                  showSearch\r\n                  onChange={(value) => this.props.handleChange('form_unit', value)}\r\n                >\r\n                  {\r\n                    form_unitOptions.map((item) => {\r\n                      return (\r\n                        <Option key={item} value={item}>{item}</Option>\r\n                      )\r\n                    })\r\n                  }\r\n                </Select>\r\n              </FormItem>\r\n              <FormItem label=\"Dispense\">\r\n                <Input value={this.props.activeRecord.dispense} onChange={((e) => this.props.handleChange('dispense', e.target.value))}\r\n                />\r\n              </FormItem>\r\n              <FormItem label=\"Take\">\r\n                <Input value={this.props.activeRecord.take} onChange={((e) => this.props.handleChange('take', e.target.value))}\r\n                />\r\n              </FormItem>\r\n              <FormItem label=\"SIG\">\r\n                <Input value={this.props.activeRecord.sig} onChange={((e) => this.props.handleChange('sig', e.target.value))}\r\n                />\r\n              </FormItem>\r\n          </Form>\r\n\r\n          </Modal>\r\n        );\r\n    }\r\n}\r\nexport default MedicineForm;\r\n","/*eslint-disable */\r\n\r\nimport React from 'react'\r\nimport { Modal, Button,Input, Form, DatePicker  } from 'antd';\r\nconst FormItem = Form.Item;\r\nconst TextArea = Input.TextArea;\r\n\r\nclass TemplateForm extends React.Component {\r\n\r\n  onSumbitVal = () => {\r\n    const { name } = this.props.activeRecord;\r\n    if(!_.isEmpty(name)){\r\n      this.props.onSubmit('template');\r\n    }else {\r\n      Modal.error({\r\n       title: 'Please Fill up Template name',\r\n       content: 'Error',\r\n     });\r\n    }\r\n  }\r\n\r\n    render(){\r\n      const { visible, onCloseModal } = this.props;\r\n        return (\r\n          <Modal\r\n            title={this.props.activeRecord.id ? 'Edit Template' : 'New Template'}\r\n            visible={visible}\r\n            onCancel={onCloseModal}\r\n            footer={[\r\n            <Button key=\"back\" onClick={onCloseModal}>Return</Button>,\r\n            <Button key=\"submit\" type=\"primary\" onClick={this.onSumbitVal}>\r\n              Submit\r\n            </Button>,\r\n          ]}\r\n          >\r\n          <Form layout=\"horizontal\">\r\n            <FormItem label=\"Name\">\r\n              <Input value={this.props.activeRecord.name} onChange={((e)=>this.props.handleChange('name',e.target.value))}\r\n              />\r\n            </FormItem>\r\n            <FormItem label=\"Order\">\r\n              <TextArea rows={20} value={this.props.activeRecord.data} onChange={((e)=>this.props.handleChange('data',e.target.value))}\r\n              />\r\n            </FormItem>\r\n          </Form>\r\n\r\n          </Modal>\r\n        );\r\n    }\r\n}\r\nexport default TemplateForm;\r\n","/*eslint-disable */\r\n\r\nimport React from 'react'\r\nimport { Table, Divider, Tag, Card, Input, Button, Tabs, Modal } from 'antd';\r\nimport {  withRouter } from 'react-router-dom';\r\nimport update from 'react-addons-update';\r\n\r\nconst TabPane = Tabs.TabPane;\r\nconst confirm = Modal.confirm;\r\n\r\nimport MedicineForm from './MedicineForm';\r\nimport TemplateForm from './TemplateForm';\r\n\r\n\r\nimport { getMedicineList, upsertMedicine, deleteMedicine } from '../../actions/medicine';\r\nimport { getTemplateList, upsertTemplate, deleteTemplate } from '../../actions/template';\r\n\r\nclass Settings extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      isSettingsModal: false,\r\n      isTemplateModal: false,\r\n      activeRecord:{},\r\n      medicineList:[],\r\n      templateList:[],\r\n    }\r\n  }\r\n\r\n    componentWillMount(){\r\n      this.fetchMedicineList();\r\n      this.fetchTemplateList();\r\n    }\r\n\r\n    fetchMedicineList = () => {\r\n      getMedicineList( (response) => {\r\n        this.setState({\r\n          medicineList: response.data || [],\r\n          activeRecord: {},\r\n          isSettingsModal: false,\r\n          isTemplateModal: false,\r\n\r\n        })\r\n      })\r\n    }\r\n\r\n    fetchTemplateList = () =>{\r\n      getTemplateList( (response) => {\r\n        this.setState({\r\n          templateList: response.data || [],\r\n          activeRecord: {},\r\n          isSettingsModal: false,\r\n          isTemplateModal: false,\r\n\r\n        })\r\n      })\r\n    }\r\n\r\n\r\n    onPatientList = (data) => {\r\n      this.props.history.push(`/`);\r\n    }\r\n\r\n    onCloseModal = (name) => {\r\n      return ()=> {\r\n        this.setState({\r\n          [name]: false,\r\n        })\r\n      }\r\n    }\r\n\r\n    onOpenModal = (name) => {\r\n      return ()=>{\r\n        this.setState({\r\n          [name]: true,\r\n          activeRecord:{},\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    handleChange = (name,value) => {\r\n      const payload = {\r\n        [name]: value\r\n      }\r\n      let newUpdate = update(this.state.activeRecord,{\r\n        $merge: payload\r\n      })\r\n      this.setState({\r\n        activeRecord:newUpdate\r\n      })\r\n    }\r\n\r\n    onHandleEdit = (data,name) =>{\r\n      return ()=>{\r\n        this.setState({\r\n          activeRecord:{\r\n            ...data,\r\n          },\r\n          [name]:true,\r\n        })\r\n      }\r\n    }\r\n\r\n    onHandleDelete = (data, name) => {\r\n      return ()=>{\r\n        let me = this;\r\n        confirm({\r\n          title: 'Do you Want to delete these items?',\r\n          content: data.name,\r\n          onOk() {\r\n            if(name === 'medicine'){\r\n              deleteMedicine(data.id,()=> {\r\n                me.fetchMedicineList()\r\n              })\r\n            }\r\n            if(name === 'template') {\r\n              deleteTemplate(data.id, ()=> {\r\n                me.fetchTemplateList();\r\n              })\r\n            }\r\n\r\n          },\r\n          onCancel() {\r\n            console.log('Cancel');\r\n          },\r\n        });\r\n      }\r\n    }\r\n\r\n    onSubmit = (name) => {\r\n\r\n      if(name === 'medicine'){\r\n        const payload = this.state.activeRecord;\r\n        upsertMedicine(payload,(response)=>{\r\n          this.fetchMedicineList()\r\n        })\r\n      }\r\n\r\n      if(name === 'template'){\r\n        const payload = this.state.activeRecord;\r\n        upsertTemplate(payload,(response)=>{\r\n          this.fetchTemplateList()\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n      let dataMedicine = this.state.medicineList.map((item,i)=>{\r\n        item.key = i\r\n        return item;\r\n      })\r\n\r\n      const columnsMedicine = [{\r\n        title: 'Medicine',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n      }, {\r\n        title: 'Action',\r\n        key: 'action',\r\n        render: (text, record) => (\r\n          <span>\r\n            <a onClick={this.onHandleEdit(record,'isSettingsModal')}>Edit</a>\r\n            <Divider type=\"vertical\" />\r\n            <a onClick={this.onHandleDelete(record,'medicine')}>Delete</a>\r\n          </span>\r\n        ),\r\n      }];\r\n\r\n      let dataTemplate = this.state.templateList.map((item,i)=>{\r\n        item.key = i\r\n        return item;\r\n      })\r\n\r\n      const columnsTemplate = [{\r\n        title: 'Order',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n      }, {\r\n        title: 'Action',\r\n        key: 'action',\r\n        render: (text, record) => (\r\n          <span>\r\n            <a onClick={this.onHandleEdit(record,'isTemplateModal')}>Edit</a>\r\n            <Divider type=\"vertical\" />\r\n            <a onClick={this.onHandleDelete(record,'template')}>Delete</a>\r\n          </span>\r\n        ),\r\n      }];\r\n        return (\r\n          <Card title={\r\n            <div>\r\n              <Button onClick={this.onPatientList}>Back to Patient</Button>\r\n              <h1>Settings</h1>\r\n            </div>\r\n\r\n          }>\r\n          <Tabs type=\"card\" defaultActiveKey=\"1\" >\r\n            <TabPane tab=\"Medicine\" key=\"1\">\r\n              <Button onClick={this.onOpenModal('isSettingsModal')} type=\"primary\">New Medicine</Button>\r\n              <br/>\r\n              <Table columns={columnsMedicine} dataSource={dataMedicine} />\r\n            </TabPane>\r\n            {/*<TabPane tab=\"Template Order\" key=\"2\">\r\n              <Button onClick={this.onOpenModal('isTemplateModal')} type=\"primary\">New Template</Button>\r\n              <br/>\r\n              <Table columns={columnsTemplate} dataSource={dataTemplate} />\r\n            </TabPane>*/}\r\n          </Tabs>\r\n\r\n          {\r\n            this.state.isSettingsModal ? (\r\n              <MedicineForm\r\n                onSubmit={this.onSubmit}\r\n                visible={this.state.isSettingsModal}\r\n                onCloseModal={this.onCloseModal('isSettingsModal')}\r\n                handleChange={this.handleChange}\r\n                {...this.state}\r\n              />\r\n            ) : null\r\n          }\r\n\r\n          {\r\n            this.state.isTemplateModal ? (\r\n              <TemplateForm\r\n                onSubmit={this.onSubmit}\r\n                visible={this.state.isTemplateModal}\r\n                onCloseModal={this.onCloseModal('isTemplateModal')}\r\n                handleChange={this.handleChange}\r\n                {...this.state}\r\n              />\r\n            ) : null\r\n          }\r\n\r\n          </Card>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(Settings);\r\n","/*eslint-disable */\r\n\r\nimport React from 'react'\r\nimport ReactToPrint from \"react-to-print\";\r\nimport { Row, Col, Button } from 'antd';\r\nimport {  withRouter } from 'react-router-dom';\r\nimport moment from 'moment'\r\n\r\nimport { getPatientView } from '../../actions/patient';\r\nimport { getOrderView } from '../../actions/order';\r\nimport printImage from '../../assets/print.png'\r\n\r\nclass ComponentToPrint extends React.Component {\r\n\r\n  render(){\r\n    const { name , address, birthdate, contact_number, weight } = this.props.patientInfo\r\n    const { order } = this.props.orderInfo;\r\n    let parseOrder;\r\n    if(order){\r\n      // let dataOrder = JSON.parse(order);\r\n      // parseOrder = dataOrder.orderArray.map((item,i)=>{\r\n      //   return(\r\n      //     <pre key={i} style={{fontSize: 16, whiteSpace:'pre-wrap'}}>\r\n      //       {i+1}. {item}\r\n      //     </pre>\r\n      //   )\r\n      // })\r\n\r\n      let dataOrder = JSON.parse(order);\r\n      parseOrder = dataOrder.orderArray.map((item, i) => {\r\n        return (\r\n          <pre key={i} style={{ fontSize: 12, marginBottom: 0, fontWeight: 'bold', whiteSpace: 'pre-wrap' }}>\r\n            {i + 1}. {item}\r\n          </pre>\r\n        )\r\n      })\r\n    }\r\n    let duration = moment.duration(moment().diff(birthdate));\r\n    const formatDuration = (duration) => {\r\n      let years = duration.years();\r\n      let months = duration.months();\r\n      let days = duration.days();\r\n      let result = '';\r\n      if (years === 1) {\r\n        result += 'one year ';\r\n      } else if (years > 1) {\r\n        result += years + ' years ';\r\n      }\r\n      if (months === 1) {\r\n        result += 'one month ';\r\n      } else if (months > 1) {\r\n        result += months + ' months ';\r\n      }\r\n      if (days === 1) {\r\n        result += 'one day ';\r\n      } else if (days > 1) {\r\n        result += days + ' days ';\r\n      }\r\n      return result;\r\n    }\r\n    return(\r\n      <div>\r\n        <div style={{\r\n          position: 'relative',\r\n        }}>\r\n\r\n          <img src={printImage} style={{ position: 'absolute', width: 480, height: 680, left: 0, right: 0 }} />\r\n\r\n          <div style={{ marginLeft: 25, marginTop: 170, position: 'absolute', width: 480 }}>\r\n            <Row>\r\n              <Col span={12}>\r\n                <p style={{ fontSize: 11, marginBottom: 0, fontWeight: 'bold' }}>\r\n                  Patient: {name}\r\n                </p>\r\n              </Col>\r\n              <Col span={12}>\r\n                <p style={{ fontSize: 11, fontWeight: 'bold', textAlign: 'left', marginBottom: 0 }}>\r\n                  Age: {formatDuration(duration)}\r\n                </p>\r\n\r\n              </Col>\r\n            </Row>\r\n            <Row >\r\n              <Col span={12} >\r\n                <p style={{fontSize: 11,fontWeight:'bold',marginBottom:0}}>\r\n                  Address: {address}\r\n                </p>\r\n              </Col>\r\n              <Col span={12}>\r\n                <p style={{fontSize: 11,fontWeight:'bold',textAlign:'left',marginBottom:0}}>\r\n                  Date: {moment().format('YYYY-MM-DD')}\r\n                </p>\r\n              </Col>\r\n              <Col span={12} >\r\n              </Col>\r\n              <Col span={12} >\r\n                <p style={{fontSize: 11,fontWeight:'bold'}}>\r\n                  Weight: {weight}\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n\r\n            <div style={{ marginTop: 40, width: 400, marginLeft: 30 }}>\r\n              <Row>\r\n                <Col span={24}>\r\n                  {parseOrder}\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n\r\n\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nclass ComponentToPrintNoColor extends React.Component {\r\n\r\n  render() {\r\n    const { name, address, birthdate, contact_number, weight } = this.props.patientInfo\r\n    const { order } = this.props.orderInfo;\r\n    let parseOrder;\r\n    if (order) {\r\n      let dataOrder = JSON.parse(order);\r\n      parseOrder = dataOrder.orderArray.map((item, i) => {\r\n        return (\r\n          <pre key={i} style={{ fontSize: 12, marginBottom: 0, fontWeight: 'bold', whiteSpace: 'pre-wrap' }}>\r\n            {i + 1}. {item}\r\n          </pre>\r\n        )\r\n      })\r\n    }\r\n    let duration = moment.duration(moment().diff(birthdate));\r\n    const formatDuration = (duration) => {\r\n      let years = duration.years();\r\n      let months = duration.months();\r\n      let days = duration.days();\r\n      let result = '';\r\n      if (years === 1) {\r\n        result += 'one year ';\r\n      } else if (years > 1) {\r\n        result += years + ' years ';\r\n      }\r\n      if (months === 1) {\r\n        result += 'one month ';\r\n      } else if (months > 1) {\r\n        result += months + ' months ';\r\n      }\r\n      if (days === 1) {\r\n        result += 'one day ';\r\n      } else if (days > 1) {\r\n        result += days + ' days ';\r\n      }\r\n      return result;\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={{\r\n          position: 'relative',\r\n        }}>\r\n          <div style={{ marginLeft: 25, marginTop: 170, position: 'absolute', width: 480 }}>\r\n            <Row>\r\n              <Col span={12}>\r\n                <p style={{ fontSize: 11, marginBottom: 0, fontWeight: 'bold' }}>\r\n                  Patient: {name}\r\n                </p>\r\n              </Col>\r\n              <Col span={12}>\r\n                <p style={{ fontSize: 11, fontWeight: 'bold', textAlign: 'left', marginBottom: 0 }}>\r\n                  Age: {formatDuration(duration)}\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n            <Row >\r\n              <Col span={12} >\r\n                <p style={{fontSize: 11,fontWeight:'bold',marginBottom:0}}>\r\n                  Address: {address}\r\n                </p>\r\n              </Col>\r\n              <Col span={12}>\r\n                <p style={{fontSize: 11,fontWeight:'bold',textAlign:'left',marginBottom:0}}>\r\n                  Date: {moment().format('YYYY-MM-DD')}\r\n                </p>\r\n              </Col>\r\n              <Col span={12} >\r\n              </Col>\r\n              <Col span={12} >\r\n                <p style={{fontSize: 11,fontWeight:'bold'}}>\r\n                  Weight: {weight}\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n\r\n            <div style={{ marginTop: 40, width: 400, marginLeft: 30, }}>\r\n              <Row>\r\n                <Col span={24}>\r\n                  {parseOrder}\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass PrintView extends React.Component {\r\n  state = {\r\n    patientInfo: {},\r\n    orderInfo:{},\r\n  }\r\n\r\n  componentWillMount(){\r\n\r\n    this.fetchPatientView();\r\n    this.fetchOrderView();\r\n  }\r\n\r\n  fetchPatientView = () => {\r\n    let patient_id = this.props.match.params.id;\r\n    getPatientView( patient_id ,(response) => {\r\n      this.setState({\r\n        patientInfo: {\r\n          ...response.data[0],\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  fetchOrderView = () => {\r\n    let order_id = this.props.match.params.orderId;\r\n    getOrderView( order_id ,(response) => {\r\n      this.setState({\r\n        orderInfo: {\r\n          ...response.data[0],\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  onBack = () =>{\r\n    this.props.history.goBack()\r\n  }\r\n\r\n    render(){\r\n        return (\r\n          <div>\r\n          <Button onClick={this.onBack}>\r\n            Go Back\r\n          </Button>\r\n          <ReactToPrint\r\n            trigger={() => <a><Button type=\"primary\">Print with background!</Button></a>}\r\n            content={() => this.componentRef}\r\n          />\r\n            <ReactToPrint\r\n              trigger={() => <a><Button type=\"primary\">Print with no backround!</Button></a>}\r\n              content={() => this.componentRefnoColor}\r\n            />\r\n          <ComponentToPrint {...this.state} ref={el => (this.componentRef = el)} />\r\n          <ComponentToPrintNoColor  {...this.state} ref={el => (this.componentRefnoColor = el)} />\r\n          </div>\r\n        );\r\n    }\r\n}\r\nexport default PrintView;\r\n","/*eslint-disable */\r\n\r\nimport React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\n// import Home from '../home'\r\nimport PatientList from '../patientlist';\r\nimport PatientView from '../patientview';\r\nimport Settings from '../settings';\r\nimport PrintView from '../print'\r\n\r\nconst App = () => (\r\n  <div style={{ padding: 20 }}>\r\n    <main>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={PatientList} />\r\n        <Route exact path=\"/patient/:id\" component={PatientView} />\r\n        <Route exact path=\"/patient/:id/printview/:orderId\" component={PrintView} />\r\n        <Route exact path=\"/settings\" component={Settings} />\r\n      </Switch>\r\n    </main>\r\n  </div>\r\n)\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { ConnectedRouter } from 'connected-react-router'\r\nimport store, { history } from './store'\r\nimport App from './containers/app'\r\n\r\nimport 'antd/dist/antd.css';\r\nimport 'sanitize.css/sanitize.css'\r\nimport './index.css'\r\n\r\nconst target = document.querySelector('#root')\r\nrender(\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={history}>\r\n      <div>\r\n        <App />\r\n      </div>\r\n    </ConnectedRouter>\r\n  </Provider>,\r\n  target\r\n)\r\n"],"sourceRoot":""}